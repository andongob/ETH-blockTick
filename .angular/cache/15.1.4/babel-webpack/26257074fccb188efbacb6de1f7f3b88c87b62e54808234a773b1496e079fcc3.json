{"ast":null,"code":"'use strict';\n\nvar _ = require('lodash');\nvar BN = require('../crypto/bn');\nvar BufferUtil = require('../util/buffer');\nvar BufferReader = require('../encoding/bufferreader');\nvar BufferWriter = require('../encoding/bufferwriter');\nvar Hash = require('../crypto/hash');\nvar JSUtil = require('../util/js');\nvar $ = require('../util/preconditions');\nvar GENESIS_BITS = 0x1d00ffff;\n\n/**\r\n * Instantiate a BlockHeader from a Buffer, JSON object, or Object with\r\n * the properties of the BlockHeader\r\n *\r\n * @param {*} - A Buffer, JSON string, or Object\r\n * @returns {BlockHeader} - An instance of block header\r\n * @constructor\r\n */\nvar BlockHeader = function BlockHeader(arg) {\n  if (!(this instanceof BlockHeader)) {\n    return new BlockHeader(arg);\n  }\n  var info = BlockHeader._from(arg);\n  this.version = info.version;\n  this.prevHash = info.prevHash;\n  this.merkleRoot = info.merkleRoot;\n  this.time = info.time;\n  this.timestamp = info.time;\n  this.bits = info.bits;\n  this.nonce = info.nonce;\n  if (info.hash) {\n    $.checkState(this.hash === info.hash, 'Argument object hash property does not match block hash.');\n  }\n  return this;\n};\n\n/**\r\n * @param {*} - A Buffer, JSON string or Object\r\n * @returns {Object} - An object representing block header data\r\n * @throws {TypeError} - If the argument was not recognized\r\n * @private\r\n */\nBlockHeader._from = function _from(arg) {\n  var info = {};\n  if (BufferUtil.isBuffer(arg)) {\n    info = BlockHeader._fromBufferReader(BufferReader(arg));\n  } else if (_.isObject(arg)) {\n    info = BlockHeader._fromObject(arg);\n  } else {\n    throw new TypeError('Unrecognized argument for BlockHeader');\n  }\n  return info;\n};\n\n/**\r\n * @param {Object} - A JSON string\r\n * @returns {Object} - An object representing block header data\r\n * @private\r\n */\nBlockHeader._fromObject = function _fromObject(data) {\n  $.checkArgument(data, 'data is required');\n  var prevHash = data.prevHash;\n  var merkleRoot = data.merkleRoot;\n  if (_.isString(data.prevHash)) {\n    prevHash = BufferUtil.reverse(Buffer.from(data.prevHash, 'hex'));\n  }\n  if (_.isString(data.merkleRoot)) {\n    merkleRoot = BufferUtil.reverse(Buffer.from(data.merkleRoot, 'hex'));\n  }\n  var info = {\n    hash: data.hash,\n    version: data.version,\n    prevHash: prevHash,\n    merkleRoot: merkleRoot,\n    time: data.time,\n    timestamp: data.time,\n    bits: data.bits,\n    nonce: data.nonce\n  };\n  return info;\n};\n\n/**\r\n * @param {Object} - A plain JavaScript object\r\n * @returns {BlockHeader} - An instance of block header\r\n */\nBlockHeader.fromObject = function fromObject(obj) {\n  var info = BlockHeader._fromObject(obj);\n  return new BlockHeader(info);\n};\n\n/**\r\n * @param {Binary} - Raw block binary data or buffer\r\n * @returns {BlockHeader} - An instance of block header\r\n */\nBlockHeader.fromRawBlock = function fromRawBlock(data) {\n  if (!BufferUtil.isBuffer(data)) {\n    data = Buffer.from(data, 'binary');\n  }\n  var br = BufferReader(data);\n  br.pos = BlockHeader.Constants.START_OF_HEADER;\n  var info = BlockHeader._fromBufferReader(br);\n  return new BlockHeader(info);\n};\n\n/**\r\n * @param {Buffer} - A buffer of the block header\r\n * @returns {BlockHeader} - An instance of block header\r\n */\nBlockHeader.fromBuffer = function fromBuffer(buf) {\n  var info = BlockHeader._fromBufferReader(BufferReader(buf));\n  return new BlockHeader(info);\n};\n\n/**\r\n * @param {string} - A hex encoded buffer of the block header\r\n * @returns {BlockHeader} - An instance of block header\r\n */\nBlockHeader.fromString = function fromString(str) {\n  var buf = Buffer.from(str, 'hex');\n  return BlockHeader.fromBuffer(buf);\n};\n\n/**\r\n * @param {BufferReader} - A BufferReader of the block header\r\n * @returns {Object} - An object representing block header data\r\n * @private\r\n */\nBlockHeader._fromBufferReader = function _fromBufferReader(br) {\n  var info = {};\n  info.version = br.readInt32LE();\n  info.prevHash = br.read(32);\n  info.merkleRoot = br.read(32);\n  info.time = br.readUInt32LE();\n  info.bits = br.readUInt32LE();\n  info.nonce = br.readUInt32LE();\n  return info;\n};\n\n/**\r\n * @param {BufferReader} - A BufferReader of the block header\r\n * @returns {BlockHeader} - An instance of block header\r\n */\nBlockHeader.fromBufferReader = function fromBufferReader(br) {\n  var info = BlockHeader._fromBufferReader(br);\n  return new BlockHeader(info);\n};\n\n/**\r\n * @returns {Object} - A plain object of the BlockHeader\r\n */\nBlockHeader.prototype.toObject = BlockHeader.prototype.toJSON = function toObject() {\n  return {\n    hash: this.hash,\n    version: this.version,\n    prevHash: BufferUtil.reverse(this.prevHash).toString('hex'),\n    merkleRoot: BufferUtil.reverse(this.merkleRoot).toString('hex'),\n    time: this.time,\n    bits: this.bits,\n    nonce: this.nonce\n  };\n};\n\n/**\r\n * @returns {Buffer} - A Buffer of the BlockHeader\r\n */\nBlockHeader.prototype.toBuffer = function toBuffer() {\n  return this.toBufferWriter().concat();\n};\n\n/**\r\n * @returns {string} - A hex encoded string of the BlockHeader\r\n */\nBlockHeader.prototype.toString = function toString() {\n  return this.toBuffer().toString('hex');\n};\n\n/**\r\n * @param {BufferWriter} - An existing instance BufferWriter\r\n * @returns {BufferWriter} - An instance of BufferWriter representation of the BlockHeader\r\n */\nBlockHeader.prototype.toBufferWriter = function toBufferWriter(bw) {\n  if (!bw) {\n    bw = new BufferWriter();\n  }\n  bw.writeInt32LE(this.version);\n  bw.write(this.prevHash);\n  bw.write(this.merkleRoot);\n  bw.writeUInt32LE(this.time);\n  bw.writeUInt32LE(this.bits);\n  bw.writeUInt32LE(this.nonce);\n  return bw;\n};\n\n/**\r\n * Returns the target difficulty for this block\r\n * @param {Number} bits\r\n * @returns {BN} An instance of BN with the decoded difficulty bits\r\n */\nBlockHeader.prototype.getTargetDifficulty = function getTargetDifficulty(bits) {\n  bits = bits || this.bits;\n  var target = new BN(bits & 0xffffff);\n  var mov = 8 * ((bits >>> 24) - 3);\n  while (mov-- > 0) {\n    target = target.mul(new BN(2));\n  }\n  return target;\n};\n\n/**\r\n * @link https://en.bitcoin.it/wiki/Difficulty\r\n * @return {Number}\r\n */\nBlockHeader.prototype.getDifficulty = function getDifficulty() {\n  var difficulty1TargetBN = this.getTargetDifficulty(GENESIS_BITS).mul(new BN(Math.pow(10, 8)));\n  var currentTargetBN = this.getTargetDifficulty();\n  var difficultyString = difficulty1TargetBN.div(currentTargetBN).toString(10);\n  var decimalPos = difficultyString.length - 8;\n  difficultyString = difficultyString.slice(0, decimalPos) + '.' + difficultyString.slice(decimalPos);\n  return parseFloat(difficultyString);\n};\n\n/**\r\n * @returns {Buffer} - The little endian hash buffer of the header\r\n */\nBlockHeader.prototype._getHash = function hash() {\n  var buf = this.toBuffer();\n  return Hash.sha256sha256(buf);\n};\nvar idProperty = {\n  configurable: false,\n  enumerable: true,\n  /**\r\n   * @returns {string} - The big endian hash buffer of the header\r\n   */\n  get: function () {\n    if (!this._id) {\n      this._id = BufferReader(this._getHash()).readReverse().toString('hex');\n    }\n    return this._id;\n  },\n  set: _.noop\n};\nObject.defineProperty(BlockHeader.prototype, 'id', idProperty);\nObject.defineProperty(BlockHeader.prototype, 'hash', idProperty);\n\n/**\r\n * @returns {Boolean} - If timestamp is not too far in the future\r\n */\nBlockHeader.prototype.validTimestamp = function validTimestamp() {\n  var currentTime = Math.round(new Date().getTime() / 1000);\n  if (this.time > currentTime + BlockHeader.Constants.MAX_TIME_OFFSET) {\n    return false;\n  }\n  return true;\n};\n\n/**\r\n * @returns {Boolean} - If the proof-of-work hash satisfies the target difficulty\r\n */\nBlockHeader.prototype.validProofOfWork = function validProofOfWork() {\n  var pow = new BN(this.id, 'hex');\n  var target = this.getTargetDifficulty();\n  if (pow.cmp(target) > 0) {\n    return false;\n  }\n  return true;\n};\n\n/**\r\n * @returns {string} - A string formatted for the console\r\n */\nBlockHeader.prototype.inspect = function inspect() {\n  return '<BlockHeader ' + this.id + '>';\n};\nBlockHeader.Constants = {\n  START_OF_HEADER: 8,\n  // Start buffer position in raw block data\n  MAX_TIME_OFFSET: 2 * 60 * 60,\n  // The max a timestamp can be in the future\n  LARGEST_HASH: new BN('10000000000000000000000000000000000000000000000000000000000000000', 'hex')\n};\nmodule.exports = BlockHeader;","map":{"version":3,"names":["_","require","BN","BufferUtil","BufferReader","BufferWriter","Hash","JSUtil","$","GENESIS_BITS","BlockHeader","arg","info","_from","version","prevHash","merkleRoot","time","timestamp","bits","nonce","hash","checkState","isBuffer","_fromBufferReader","isObject","_fromObject","TypeError","data","checkArgument","isString","reverse","Buffer","from","fromObject","obj","fromRawBlock","br","pos","Constants","START_OF_HEADER","fromBuffer","buf","fromString","str","readInt32LE","read","readUInt32LE","fromBufferReader","prototype","toObject","toJSON","toString","toBuffer","toBufferWriter","concat","bw","writeInt32LE","write","writeUInt32LE","getTargetDifficulty","target","mov","mul","getDifficulty","difficulty1TargetBN","Math","pow","currentTargetBN","difficultyString","div","decimalPos","length","slice","parseFloat","_getHash","sha256sha256","idProperty","configurable","enumerable","get","_id","readReverse","set","noop","Object","defineProperty","validTimestamp","currentTime","round","Date","getTime","MAX_TIME_OFFSET","validProofOfWork","id","cmp","inspect","LARGEST_HASH","module","exports"],"sources":["D:/Documentos/BLOCKCHAIN/Doble Grado BlockChain/Blockchain Engineering/TFM - Enginering - SEP 2023/BLOCKTICK ETHEREUM/BLOCKTICK/Ethereum-Blocktick/node_modules/bitcore-lib/lib/block/blockheader.js"],"sourcesContent":["'use strict';\r\n\r\nvar _ = require('lodash');\r\nvar BN = require('../crypto/bn');\r\nvar BufferUtil = require('../util/buffer');\r\nvar BufferReader = require('../encoding/bufferreader');\r\nvar BufferWriter = require('../encoding/bufferwriter');\r\nvar Hash = require('../crypto/hash');\r\nvar JSUtil = require('../util/js');\r\nvar $ = require('../util/preconditions');\r\n\r\nvar GENESIS_BITS = 0x1d00ffff;\r\n\r\n/**\r\n * Instantiate a BlockHeader from a Buffer, JSON object, or Object with\r\n * the properties of the BlockHeader\r\n *\r\n * @param {*} - A Buffer, JSON string, or Object\r\n * @returns {BlockHeader} - An instance of block header\r\n * @constructor\r\n */\r\nvar BlockHeader = function BlockHeader(arg) {\r\n  if (!(this instanceof BlockHeader)) {\r\n    return new BlockHeader(arg);\r\n  }\r\n  var info = BlockHeader._from(arg);\r\n  this.version = info.version;\r\n  this.prevHash = info.prevHash;\r\n  this.merkleRoot = info.merkleRoot;\r\n  this.time = info.time;\r\n  this.timestamp = info.time;\r\n  this.bits = info.bits;\r\n  this.nonce = info.nonce;\r\n\r\n  if (info.hash) {\r\n    $.checkState(\r\n      this.hash === info.hash,\r\n      'Argument object hash property does not match block hash.'\r\n    );\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param {*} - A Buffer, JSON string or Object\r\n * @returns {Object} - An object representing block header data\r\n * @throws {TypeError} - If the argument was not recognized\r\n * @private\r\n */\r\nBlockHeader._from = function _from(arg) {\r\n  var info = {};\r\n  if (BufferUtil.isBuffer(arg)) {\r\n    info = BlockHeader._fromBufferReader(BufferReader(arg));\r\n  } else if (_.isObject(arg)) {\r\n    info = BlockHeader._fromObject(arg);\r\n  } else {\r\n    throw new TypeError('Unrecognized argument for BlockHeader');\r\n  }\r\n  return info;\r\n};\r\n\r\n/**\r\n * @param {Object} - A JSON string\r\n * @returns {Object} - An object representing block header data\r\n * @private\r\n */\r\nBlockHeader._fromObject = function _fromObject(data) {\r\n  $.checkArgument(data, 'data is required');\r\n  var prevHash = data.prevHash;\r\n  var merkleRoot = data.merkleRoot;\r\n  if (_.isString(data.prevHash)) {\r\n    prevHash = BufferUtil.reverse(Buffer.from(data.prevHash, 'hex'));\r\n  }\r\n  if (_.isString(data.merkleRoot)) {\r\n    merkleRoot = BufferUtil.reverse(Buffer.from(data.merkleRoot, 'hex'));\r\n  }\r\n  var info = {\r\n    hash: data.hash,\r\n    version: data.version,\r\n    prevHash: prevHash,\r\n    merkleRoot: merkleRoot,\r\n    time: data.time,\r\n    timestamp: data.time,\r\n    bits: data.bits,\r\n    nonce: data.nonce\r\n  };\r\n  return info;\r\n};\r\n\r\n/**\r\n * @param {Object} - A plain JavaScript object\r\n * @returns {BlockHeader} - An instance of block header\r\n */\r\nBlockHeader.fromObject = function fromObject(obj) {\r\n  var info = BlockHeader._fromObject(obj);\r\n  return new BlockHeader(info);\r\n};\r\n\r\n/**\r\n * @param {Binary} - Raw block binary data or buffer\r\n * @returns {BlockHeader} - An instance of block header\r\n */\r\nBlockHeader.fromRawBlock = function fromRawBlock(data) {\r\n  if (!BufferUtil.isBuffer(data)) {\r\n    data = Buffer.from(data, 'binary');\r\n  }\r\n  var br = BufferReader(data);\r\n  br.pos = BlockHeader.Constants.START_OF_HEADER;\r\n  var info = BlockHeader._fromBufferReader(br);\r\n  return new BlockHeader(info);\r\n};\r\n\r\n/**\r\n * @param {Buffer} - A buffer of the block header\r\n * @returns {BlockHeader} - An instance of block header\r\n */\r\nBlockHeader.fromBuffer = function fromBuffer(buf) {\r\n  var info = BlockHeader._fromBufferReader(BufferReader(buf));\r\n  return new BlockHeader(info);\r\n};\r\n\r\n/**\r\n * @param {string} - A hex encoded buffer of the block header\r\n * @returns {BlockHeader} - An instance of block header\r\n */\r\nBlockHeader.fromString = function fromString(str) {\r\n  var buf = Buffer.from(str, 'hex');\r\n  return BlockHeader.fromBuffer(buf);\r\n};\r\n\r\n/**\r\n * @param {BufferReader} - A BufferReader of the block header\r\n * @returns {Object} - An object representing block header data\r\n * @private\r\n */\r\nBlockHeader._fromBufferReader = function _fromBufferReader(br) {\r\n  var info = {};\r\n  info.version = br.readInt32LE();\r\n  info.prevHash = br.read(32);\r\n  info.merkleRoot = br.read(32);\r\n  info.time = br.readUInt32LE();\r\n  info.bits = br.readUInt32LE();\r\n  info.nonce = br.readUInt32LE();\r\n  return info;\r\n};\r\n\r\n/**\r\n * @param {BufferReader} - A BufferReader of the block header\r\n * @returns {BlockHeader} - An instance of block header\r\n */\r\nBlockHeader.fromBufferReader = function fromBufferReader(br) {\r\n  var info = BlockHeader._fromBufferReader(br);\r\n  return new BlockHeader(info);\r\n};\r\n\r\n/**\r\n * @returns {Object} - A plain object of the BlockHeader\r\n */\r\nBlockHeader.prototype.toObject = BlockHeader.prototype.toJSON = function toObject() {\r\n  return {\r\n    hash: this.hash,\r\n    version: this.version,\r\n    prevHash: BufferUtil.reverse(this.prevHash).toString('hex'),\r\n    merkleRoot: BufferUtil.reverse(this.merkleRoot).toString('hex'),\r\n    time: this.time,\r\n    bits: this.bits,\r\n    nonce: this.nonce\r\n  };\r\n};\r\n\r\n/**\r\n * @returns {Buffer} - A Buffer of the BlockHeader\r\n */\r\nBlockHeader.prototype.toBuffer = function toBuffer() {\r\n  return this.toBufferWriter().concat();\r\n};\r\n\r\n/**\r\n * @returns {string} - A hex encoded string of the BlockHeader\r\n */\r\nBlockHeader.prototype.toString = function toString() {\r\n  return this.toBuffer().toString('hex');\r\n};\r\n\r\n/**\r\n * @param {BufferWriter} - An existing instance BufferWriter\r\n * @returns {BufferWriter} - An instance of BufferWriter representation of the BlockHeader\r\n */\r\nBlockHeader.prototype.toBufferWriter = function toBufferWriter(bw) {\r\n  if (!bw) {\r\n    bw = new BufferWriter();\r\n  }\r\n  bw.writeInt32LE(this.version);\r\n  bw.write(this.prevHash);\r\n  bw.write(this.merkleRoot);\r\n  bw.writeUInt32LE(this.time);\r\n  bw.writeUInt32LE(this.bits);\r\n  bw.writeUInt32LE(this.nonce);\r\n  return bw;\r\n};\r\n\r\n/**\r\n * Returns the target difficulty for this block\r\n * @param {Number} bits\r\n * @returns {BN} An instance of BN with the decoded difficulty bits\r\n */\r\nBlockHeader.prototype.getTargetDifficulty = function getTargetDifficulty(bits) {\r\n  bits = bits || this.bits;\r\n\r\n  var target = new BN(bits & 0xffffff);\r\n  var mov = 8 * ((bits >>> 24) - 3);\r\n  while (mov-- > 0) {\r\n    target = target.mul(new BN(2));\r\n  }\r\n  return target;\r\n};\r\n\r\n/**\r\n * @link https://en.bitcoin.it/wiki/Difficulty\r\n * @return {Number}\r\n */\r\nBlockHeader.prototype.getDifficulty = function getDifficulty() {\r\n  var difficulty1TargetBN = this.getTargetDifficulty(GENESIS_BITS).mul(new BN(Math.pow(10, 8)));\r\n  var currentTargetBN = this.getTargetDifficulty();\r\n\r\n  var difficultyString = difficulty1TargetBN.div(currentTargetBN).toString(10);\r\n  var decimalPos = difficultyString.length - 8;\r\n  difficultyString = difficultyString.slice(0, decimalPos) + '.' + difficultyString.slice(decimalPos);\r\n\r\n  return parseFloat(difficultyString);\r\n};\r\n\r\n/**\r\n * @returns {Buffer} - The little endian hash buffer of the header\r\n */\r\nBlockHeader.prototype._getHash = function hash() {\r\n  var buf = this.toBuffer();\r\n  return Hash.sha256sha256(buf);\r\n};\r\n\r\nvar idProperty = {\r\n  configurable: false,\r\n  enumerable: true,\r\n  /**\r\n   * @returns {string} - The big endian hash buffer of the header\r\n   */\r\n  get: function() {\r\n    if (!this._id) {\r\n      this._id = BufferReader(this._getHash()).readReverse().toString('hex');\r\n    }\r\n    return this._id;\r\n  },\r\n  set: _.noop\r\n};\r\nObject.defineProperty(BlockHeader.prototype, 'id', idProperty);\r\nObject.defineProperty(BlockHeader.prototype, 'hash', idProperty);\r\n\r\n/**\r\n * @returns {Boolean} - If timestamp is not too far in the future\r\n */\r\nBlockHeader.prototype.validTimestamp = function validTimestamp() {\r\n  var currentTime = Math.round(new Date().getTime() / 1000);\r\n  if (this.time > currentTime + BlockHeader.Constants.MAX_TIME_OFFSET) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns {Boolean} - If the proof-of-work hash satisfies the target difficulty\r\n */\r\nBlockHeader.prototype.validProofOfWork = function validProofOfWork() {\r\n  var pow = new BN(this.id, 'hex');\r\n  var target = this.getTargetDifficulty();\r\n\r\n  if (pow.cmp(target) > 0) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns {string} - A string formatted for the console\r\n */\r\nBlockHeader.prototype.inspect = function inspect() {\r\n  return '<BlockHeader ' + this.id + '>';\r\n};\r\n\r\nBlockHeader.Constants = {\r\n  START_OF_HEADER: 8, // Start buffer position in raw block data\r\n  MAX_TIME_OFFSET: 2 * 60 * 60, // The max a timestamp can be in the future\r\n  LARGEST_HASH: new BN('10000000000000000000000000000000000000000000000000000000000000000', 'hex')\r\n};\r\n\r\nmodule.exports = BlockHeader;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}