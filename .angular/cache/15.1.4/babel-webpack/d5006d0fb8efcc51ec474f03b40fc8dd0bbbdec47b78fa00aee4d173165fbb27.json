{"ast":null,"code":"const Buffer = require('safe-buffer').Buffer;\nconst ecurve = require('ecurve');\nconst curve = ecurve.getCurveByName('secp256k1');\nconst math = require('./math');\nconst check = require('./check');\nconst convert = require('./convert');\nconst concat = Buffer.concat;\nconst G = curve.G;\nconst n = curve.n;\nconst MUSIG_TAG = convert.hash(Buffer.from('MuSig coefficient'));\n\n// Computes ell = SHA256(pubKeys[0], ..., pubKeys[pubKeys.length-1]) with\n// pubKeys serialized in compressed form.\nfunction computeEll(pubKeys) {\n  check.checkPubKeyArr(pubKeys);\n  return convert.hash(concat(pubKeys));\n}\nfunction computeCoefficient(ell, idx) {\n  const idxBuf = Buffer.alloc(4);\n  idxBuf.writeUInt32LE(idx);\n  const data = concat([MUSIG_TAG, MUSIG_TAG, ell, idxBuf]);\n  return convert.bufferToInt(convert.hash(data)).mod(n);\n}\nfunction pubKeyCombine(pubKeys, pubKeyHash) {\n  const ell = pubKeyHash || computeEll(pubKeys);\n  let X = null;\n  for (let i = 0; i < pubKeys.length; i++) {\n    const Xi = math.liftX(pubKeys[i]);\n    const coefficient = computeCoefficient(ell, i);\n    const summand = Xi.multiply(coefficient);\n    if (X === null) {\n      X = summand;\n    } else {\n      X = X.add(summand);\n    }\n  }\n  return X;\n}\nfunction sessionInitialize(sessionId, privateKey, message, pubKeyCombined, pkParity, ell, idx) {\n  check.checkSessionParams(sessionId, privateKey, message, pubKeyCombined, ell);\n  const session = {\n    sessionId,\n    message,\n    pubKeyCombined,\n    pkParity,\n    ell,\n    idx\n  };\n  const coefficient = computeCoefficient(ell, idx);\n  session.secretKey = privateKey.multiply(coefficient).mod(n);\n  session.ownKeyParity = math.isEven(G.multiply(privateKey));\n  if (session.pkParity !== session.ownKeyParity) {\n    session.secretKey = n.subtract(session.secretKey);\n  }\n  const nonceData = concat([sessionId, message, session.pubKeyCombined, convert.intToBuffer(privateKey)]);\n  session.secretNonce = convert.bufferToInt(convert.hash(nonceData));\n  check.checkRange('secretNonce', session.secretNonce);\n  const R = G.multiply(session.secretNonce);\n  session.nonce = convert.intToBuffer(R.affineX);\n  session.nonceParity = math.isEven(R);\n  session.commitment = convert.hash(session.nonce);\n  return session;\n}\nfunction sessionNonceCombine(session, nonces) {\n  check.checkNonceArr(nonces);\n  let R = math.liftX(nonces[0]);\n  for (let i = 1; i < nonces.length; i++) {\n    R = R.add(math.liftX(nonces[i]));\n  }\n  session.combinedNonceParity = math.isEven(R);\n  return convert.intToBuffer(R.affineX);\n}\nfunction partialSign(session, message, nonceCombined, pubKeyCombined) {\n  const e = math.getE(nonceCombined, pubKeyCombined, message);\n  const sk = session.secretKey;\n  let k = session.secretNonce;\n  if (session.nonceParity !== session.combinedNonceParity) {\n    k = n.subtract(k);\n  }\n  return sk.multiply(e).add(k).mod(n);\n}\nfunction partialSigVerify(session, partialSig, nonceCombined, idx, pubKey, nonce) {\n  let e = math.getE(nonceCombined, session.pubKeyCombined, session.message);\n  const coefficient = computeCoefficient(session.ell, idx);\n  const Pj = math.liftX(pubKey);\n  const Ri = math.liftX(nonce);\n  if (!session.pkParity) {\n    e = n.subtract(e);\n  }\n  let RP = math.getR(partialSig, e.multiply(coefficient).mod(n), Pj);\n  if (session.combinedNonceParity) {\n    RP = RP.negate();\n  }\n  const sum = RP.add(Ri);\n  if (!sum.curve.isInfinity(sum)) {\n    throw new Error('partial signature verification failed');\n  }\n}\nfunction partialSigCombine(nonceCombined, partialSigs) {\n  const R = math.liftX(nonceCombined);\n  check.checkArray('partialSigs', partialSigs);\n  const Rx = convert.intToBuffer(R.affineX);\n  let s = partialSigs[0];\n  for (let i = 1; i < partialSigs.length; i++) {\n    s = s.add(partialSigs[i]).mod(n);\n  }\n  return concat([Rx, convert.intToBuffer(s)]);\n}\nmodule.exports = {\n  computeEll,\n  computeCoefficient,\n  pubKeyCombine,\n  sessionInitialize,\n  sessionNonceCombine,\n  partialSign,\n  partialSigVerify,\n  partialSigCombine\n};","map":{"version":3,"names":["Buffer","require","ecurve","curve","getCurveByName","math","check","convert","concat","G","n","MUSIG_TAG","hash","from","computeEll","pubKeys","checkPubKeyArr","computeCoefficient","ell","idx","idxBuf","alloc","writeUInt32LE","data","bufferToInt","mod","pubKeyCombine","pubKeyHash","X","i","length","Xi","liftX","coefficient","summand","multiply","add","sessionInitialize","sessionId","privateKey","message","pubKeyCombined","pkParity","checkSessionParams","session","secretKey","ownKeyParity","isEven","subtract","nonceData","intToBuffer","secretNonce","checkRange","R","nonce","affineX","nonceParity","commitment","sessionNonceCombine","nonces","checkNonceArr","combinedNonceParity","partialSign","nonceCombined","e","getE","sk","k","partialSigVerify","partialSig","pubKey","Pj","Ri","RP","getR","negate","sum","isInfinity","Error","partialSigCombine","partialSigs","checkArray","Rx","s","module","exports"],"sources":["D:/Documentos/BLOCKCHAIN/Doble Grado BlockChain/Blockchain Engineering/TFG - Enginering/BLOCKTICK/blocktick_dApp/node_modules/bip-schnorr/src/mu-sig.js"],"sourcesContent":["const Buffer = require('safe-buffer').Buffer;\nconst ecurve = require('ecurve');\nconst curve = ecurve.getCurveByName('secp256k1');\nconst math = require('./math');\nconst check = require('./check');\nconst convert = require('./convert');\n\nconst concat = Buffer.concat;\nconst G = curve.G;\nconst n = curve.n;\nconst MUSIG_TAG = convert.hash(Buffer.from('MuSig coefficient'));\n\n// Computes ell = SHA256(pubKeys[0], ..., pubKeys[pubKeys.length-1]) with\n// pubKeys serialized in compressed form.\nfunction computeEll(pubKeys) {\n  check.checkPubKeyArr(pubKeys);\n  return convert.hash(concat(pubKeys))\n}\n\nfunction computeCoefficient(ell, idx) {\n  const idxBuf = Buffer.alloc(4);\n  idxBuf.writeUInt32LE(idx);\n  const data = concat([MUSIG_TAG, MUSIG_TAG, ell, idxBuf]);\n  return convert.bufferToInt(convert.hash(data)).mod(n);\n}\n\nfunction pubKeyCombine(pubKeys, pubKeyHash) {\n  const ell = pubKeyHash || computeEll(pubKeys);\n  let X = null;\n  for (let i = 0; i < pubKeys.length; i++) {\n    const Xi = math.liftX(pubKeys[i]);\n    const coefficient = computeCoefficient(ell, i);\n    const summand = Xi.multiply(coefficient);\n    if (X === null) {\n      X = summand;\n    } else {\n      X = X.add(summand);\n    }\n  }\n  return X;\n}\n\nfunction sessionInitialize(sessionId, privateKey, message, pubKeyCombined, pkParity, ell, idx) {\n  check.checkSessionParams(sessionId, privateKey, message, pubKeyCombined, ell);\n\n  const session = {\n    sessionId,\n    message,\n    pubKeyCombined,\n    pkParity,\n    ell,\n    idx,\n  };\n\n  const coefficient = computeCoefficient(ell, idx);\n  session.secretKey = privateKey.multiply(coefficient).mod(n);\n  session.ownKeyParity = math.isEven(G.multiply(privateKey));\n  if (session.pkParity !== session.ownKeyParity) {\n    session.secretKey = n.subtract(session.secretKey);\n  }\n\n  const nonceData = concat([sessionId, message, session.pubKeyCombined, convert.intToBuffer(privateKey)]);\n  session.secretNonce = convert.bufferToInt(convert.hash(nonceData));\n  check.checkRange('secretNonce', session.secretNonce);\n  const R = G.multiply(session.secretNonce);\n  session.nonce = convert.intToBuffer(R.affineX);\n  session.nonceParity = math.isEven(R);\n  session.commitment = convert.hash(session.nonce);\n  return session;\n}\n\nfunction sessionNonceCombine(session, nonces) {\n  check.checkNonceArr(nonces);\n  let R = math.liftX(nonces[0]);\n  for (let i = 1; i < nonces.length; i++) {\n    R = R.add(math.liftX(nonces[i]));\n  }\n  session.combinedNonceParity = math.isEven(R);\n  return convert.intToBuffer(R.affineX);\n}\n\nfunction partialSign(session, message, nonceCombined, pubKeyCombined) {\n  const e = math.getE(nonceCombined, pubKeyCombined, message);\n  const sk = session.secretKey;\n  let k = session.secretNonce;\n  if (session.nonceParity !== session.combinedNonceParity) {\n    k = n.subtract(k);\n  }\n  return sk.multiply(e).add(k).mod(n);\n}\n\nfunction partialSigVerify(session, partialSig, nonceCombined, idx, pubKey, nonce) {\n  let e = math.getE(nonceCombined, session.pubKeyCombined, session.message);\n  const coefficient = computeCoefficient(session.ell, idx);\n  const Pj = math.liftX(pubKey);\n  const Ri = math.liftX(nonce);\n\n  if (!session.pkParity) {\n    e = n.subtract(e);\n  }\n\n  let RP = math.getR(partialSig, e.multiply(coefficient).mod(n), Pj);\n  if (session.combinedNonceParity) {\n    RP = RP.negate();\n  }\n  const sum = RP.add(Ri);\n  if (!sum.curve.isInfinity(sum)) {\n    throw new Error('partial signature verification failed');\n  }\n}\n\nfunction partialSigCombine(nonceCombined, partialSigs) {\n  const R = math.liftX(nonceCombined);\n  check.checkArray('partialSigs', partialSigs);\n  const Rx = convert.intToBuffer(R.affineX);\n  let s = partialSigs[0];\n  for (let i = 1; i < partialSigs.length; i++) {\n    s = s.add(partialSigs[i]).mod(n);\n  }\n  return concat([Rx, convert.intToBuffer(s)]);\n}\n\nmodule.exports = {\n  computeEll,\n  computeCoefficient,\n  pubKeyCombine,\n  sessionInitialize,\n  sessionNonceCombine,\n  partialSign,\n  partialSigVerify,\n  partialSigCombine,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}