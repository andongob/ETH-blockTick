{"ast":null,"code":"'use strict';\n\nvar BufferWriter = require('./bufferwriter');\nvar BufferReader = require('./bufferreader');\nvar BN = require('../crypto/bn');\nvar Varint = function Varint(buf) {\n  if (!(this instanceof Varint)) return new Varint(buf);\n  if (Buffer.isBuffer(buf)) {\n    this.buf = buf;\n  } else if (typeof buf === 'number') {\n    var num = buf;\n    this.fromNumber(num);\n  } else if (buf instanceof BN) {\n    var bn = buf;\n    this.fromBN(bn);\n  } else if (buf) {\n    var obj = buf;\n    this.set(obj);\n  }\n};\nVarint.prototype.set = function (obj) {\n  this.buf = obj.buf || this.buf;\n  return this;\n};\nVarint.prototype.fromString = function (str) {\n  this.set({\n    buf: Buffer.from(str, 'hex')\n  });\n  return this;\n};\nVarint.prototype.toString = function () {\n  return this.buf.toString('hex');\n};\nVarint.prototype.fromBuffer = function (buf) {\n  this.buf = buf;\n  return this;\n};\nVarint.prototype.fromBufferReader = function (br) {\n  this.buf = br.readVarintBuf();\n  return this;\n};\nVarint.prototype.fromBN = function (bn) {\n  this.buf = BufferWriter().writeVarintBN(bn).concat();\n  return this;\n};\nVarint.prototype.fromNumber = function (num) {\n  this.buf = BufferWriter().writeVarintNum(num).concat();\n  return this;\n};\nVarint.prototype.toBuffer = function () {\n  return this.buf;\n};\nVarint.prototype.toBN = function () {\n  return BufferReader(this.buf).readVarintBN();\n};\nVarint.prototype.toNumber = function () {\n  return BufferReader(this.buf).readVarintNum();\n};\nmodule.exports = Varint;","map":{"version":3,"names":["BufferWriter","require","BufferReader","BN","Varint","buf","Buffer","isBuffer","num","fromNumber","bn","fromBN","obj","set","prototype","fromString","str","from","toString","fromBuffer","fromBufferReader","br","readVarintBuf","writeVarintBN","concat","writeVarintNum","toBuffer","toBN","readVarintBN","toNumber","readVarintNum","module","exports"],"sources":["D:/Documentos/BLOCKCHAIN/Doble Grado BlockChain/Blockchain Engineering/TFM - Enginering - SEP 2023/BLOCKTICK ETHEREUM/BLOCKTICK/Ethereum-Blocktick/node_modules/bitcore-lib/lib/encoding/varint.js"],"sourcesContent":["'use strict';\n\nvar BufferWriter = require('./bufferwriter');\nvar BufferReader = require('./bufferreader');\nvar BN = require('../crypto/bn');\n\nvar Varint = function Varint(buf) {\n  if (!(this instanceof Varint))\n    return new Varint(buf);\n  if (Buffer.isBuffer(buf)) {\n    this.buf = buf;\n  } else if (typeof buf === 'number') {\n    var num = buf;\n    this.fromNumber(num);\n  } else if (buf instanceof BN) {\n    var bn = buf;\n    this.fromBN(bn);\n  } else if (buf) {\n    var obj = buf;\n    this.set(obj);\n  }\n};\n\nVarint.prototype.set = function(obj) {\n  this.buf = obj.buf || this.buf;\n  return this;\n};\n\nVarint.prototype.fromString = function(str) {\n  this.set({\n    buf: Buffer.from(str, 'hex')\n  });\n  return this;\n};\n\nVarint.prototype.toString = function() {\n  return this.buf.toString('hex');\n};\n\nVarint.prototype.fromBuffer = function(buf) {\n  this.buf = buf;\n  return this;\n};\n\nVarint.prototype.fromBufferReader = function(br) {\n  this.buf = br.readVarintBuf();\n  return this;\n};\n\nVarint.prototype.fromBN = function(bn) {\n  this.buf = BufferWriter().writeVarintBN(bn).concat();\n  return this;\n};\n\nVarint.prototype.fromNumber = function(num) {\n  this.buf = BufferWriter().writeVarintNum(num).concat();\n  return this;\n};\n\nVarint.prototype.toBuffer = function() {\n  return this.buf;\n};\n\nVarint.prototype.toBN = function() {\n  return BufferReader(this.buf).readVarintBN();\n};\n\nVarint.prototype.toNumber = function() {\n  return BufferReader(this.buf).readVarintNum();\n};\n\nmodule.exports = Varint;\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,YAAY,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAC5C,IAAIC,YAAY,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AAC5C,IAAIE,EAAE,GAAGF,OAAO,CAAC,cAAc,CAAC;AAEhC,IAAIG,MAAM,GAAG,SAASA,MAAM,CAACC,GAAG,EAAE;EAChC,IAAI,EAAE,IAAI,YAAYD,MAAM,CAAC,EAC3B,OAAO,IAAIA,MAAM,CAACC,GAAG,CAAC;EACxB,IAAIC,MAAM,CAACC,QAAQ,CAACF,GAAG,CAAC,EAAE;IACxB,IAAI,CAACA,GAAG,GAAGA,GAAG;EAChB,CAAC,MAAM,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;IAClC,IAAIG,GAAG,GAAGH,GAAG;IACb,IAAI,CAACI,UAAU,CAACD,GAAG,CAAC;EACtB,CAAC,MAAM,IAAIH,GAAG,YAAYF,EAAE,EAAE;IAC5B,IAAIO,EAAE,GAAGL,GAAG;IACZ,IAAI,CAACM,MAAM,CAACD,EAAE,CAAC;EACjB,CAAC,MAAM,IAAIL,GAAG,EAAE;IACd,IAAIO,GAAG,GAAGP,GAAG;IACb,IAAI,CAACQ,GAAG,CAACD,GAAG,CAAC;EACf;AACF,CAAC;AAEDR,MAAM,CAACU,SAAS,CAACD,GAAG,GAAG,UAASD,GAAG,EAAE;EACnC,IAAI,CAACP,GAAG,GAAGO,GAAG,CAACP,GAAG,IAAI,IAAI,CAACA,GAAG;EAC9B,OAAO,IAAI;AACb,CAAC;AAEDD,MAAM,CAACU,SAAS,CAACC,UAAU,GAAG,UAASC,GAAG,EAAE;EAC1C,IAAI,CAACH,GAAG,CAAC;IACPR,GAAG,EAAEC,MAAM,CAACW,IAAI,CAACD,GAAG,EAAE,KAAK;EAC7B,CAAC,CAAC;EACF,OAAO,IAAI;AACb,CAAC;AAEDZ,MAAM,CAACU,SAAS,CAACI,QAAQ,GAAG,YAAW;EACrC,OAAO,IAAI,CAACb,GAAG,CAACa,QAAQ,CAAC,KAAK,CAAC;AACjC,CAAC;AAEDd,MAAM,CAACU,SAAS,CAACK,UAAU,GAAG,UAASd,GAAG,EAAE;EAC1C,IAAI,CAACA,GAAG,GAAGA,GAAG;EACd,OAAO,IAAI;AACb,CAAC;AAEDD,MAAM,CAACU,SAAS,CAACM,gBAAgB,GAAG,UAASC,EAAE,EAAE;EAC/C,IAAI,CAAChB,GAAG,GAAGgB,EAAE,CAACC,aAAa,EAAE;EAC7B,OAAO,IAAI;AACb,CAAC;AAEDlB,MAAM,CAACU,SAAS,CAACH,MAAM,GAAG,UAASD,EAAE,EAAE;EACrC,IAAI,CAACL,GAAG,GAAGL,YAAY,EAAE,CAACuB,aAAa,CAACb,EAAE,CAAC,CAACc,MAAM,EAAE;EACpD,OAAO,IAAI;AACb,CAAC;AAEDpB,MAAM,CAACU,SAAS,CAACL,UAAU,GAAG,UAASD,GAAG,EAAE;EAC1C,IAAI,CAACH,GAAG,GAAGL,YAAY,EAAE,CAACyB,cAAc,CAACjB,GAAG,CAAC,CAACgB,MAAM,EAAE;EACtD,OAAO,IAAI;AACb,CAAC;AAEDpB,MAAM,CAACU,SAAS,CAACY,QAAQ,GAAG,YAAW;EACrC,OAAO,IAAI,CAACrB,GAAG;AACjB,CAAC;AAEDD,MAAM,CAACU,SAAS,CAACa,IAAI,GAAG,YAAW;EACjC,OAAOzB,YAAY,CAAC,IAAI,CAACG,GAAG,CAAC,CAACuB,YAAY,EAAE;AAC9C,CAAC;AAEDxB,MAAM,CAACU,SAAS,CAACe,QAAQ,GAAG,YAAW;EACrC,OAAO3B,YAAY,CAAC,IAAI,CAACG,GAAG,CAAC,CAACyB,aAAa,EAAE;AAC/C,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAG5B,MAAM"},"metadata":{},"sourceType":"script","externalDependencies":[]}