{"ast":null,"code":"'use strict';\n\nvar docsURL = 'http://bitcore.io/';\nmodule.exports = [{\n  name: 'InvalidB58Char',\n  message: 'Invalid Base58 character: {0} in {1}'\n}, {\n  name: 'InvalidB58Checksum',\n  message: 'Invalid Base58 checksum for {0}'\n}, {\n  name: 'InvalidNetwork',\n  message: 'Invalid version for network: got {0}'\n}, {\n  name: 'InvalidState',\n  message: 'Invalid state: {0}'\n}, {\n  name: 'NotImplemented',\n  message: 'Function {0} was not implemented yet'\n}, {\n  name: 'InvalidNetworkArgument',\n  message: 'Invalid network: must be \"livenet\" or \"testnet\", got {0}'\n}, {\n  name: 'InvalidArgument',\n  message: function () {\n    return 'Invalid Argument' + (arguments[0] ? ': ' + arguments[0] : '') + (arguments[1] ? ' Documentation: ' + docsURL + arguments[1] : '');\n  }\n}, {\n  name: 'AbstractMethodInvoked',\n  message: 'Abstract Method Invocation: {0}'\n}, {\n  name: 'InvalidArgumentType',\n  message: function () {\n    return 'Invalid Argument for ' + arguments[2] + ', expected ' + arguments[1] + ' but got ' + typeof arguments[0];\n  }\n}, {\n  name: 'Unit',\n  message: 'Internal Error on Unit {0}',\n  errors: [{\n    'name': 'UnknownCode',\n    'message': 'Unrecognized unit code: {0}'\n  }, {\n    'name': 'InvalidRate',\n    'message': 'Invalid exchange rate: {0}'\n  }]\n}, {\n  name: 'MerkleBlock',\n  message: 'Internal Error on MerkleBlock {0}',\n  errors: [{\n    'name': 'InvalidMerkleTree',\n    'message': 'This MerkleBlock contain an invalid Merkle Tree'\n  }]\n}, {\n  name: 'Transaction',\n  message: 'Internal Error on Transaction {0}',\n  errors: [{\n    name: 'Input',\n    message: 'Internal Error on Input {0}',\n    errors: [{\n      name: 'MissingScript',\n      message: 'Need a script to create an input'\n    }, {\n      name: 'UnsupportedScript',\n      message: 'Unsupported input script type: {0}'\n    }, {\n      name: 'MissingPreviousOutput',\n      message: 'No previous output information.'\n    }, {\n      name: 'BlockHeightOutOfRange',\n      message: 'Block Height can only be between 0 and 65535'\n    }, {\n      name: 'LockTimeRange',\n      message: 'Seconds needs to be more that 0 and less that 33553920'\n    }]\n  }, {\n    name: 'NeedMoreInfo',\n    message: '{0}'\n  }, {\n    name: 'InvalidSorting',\n    message: 'The sorting function provided did not return the change output as one of the array elements'\n  }, {\n    name: 'InvalidOutputAmountSum',\n    message: '{0}'\n  }, {\n    name: 'MissingSignatures',\n    message: 'Some inputs have not been fully signed'\n  }, {\n    name: 'InvalidIndex',\n    message: 'Invalid index: {0} is not between 0, {1}'\n  }, {\n    name: 'UnableToVerifySignature',\n    message: 'Unable to verify signature: {0}'\n  }, {\n    name: 'DustOutputs',\n    message: 'Dust amount detected in one output'\n  }, {\n    name: 'InvalidSatoshis',\n    message: 'Output satoshis are invalid'\n  }, {\n    name: 'FeeError',\n    message: 'Internal Error on Fee {0}',\n    errors: [{\n      name: 'TooSmall',\n      message: 'Fee is too small: {0}'\n    }, {\n      name: 'TooLarge',\n      message: 'Fee is too large: {0}'\n    }, {\n      name: 'Different',\n      message: 'Unspent value is different from specified fee: {0}'\n    }]\n  }, {\n    name: 'ChangeAddressMissing',\n    message: 'Change address is missing'\n  }, {\n    name: 'BlockHeightTooHigh',\n    message: 'Block Height can be at most 2^32 -1'\n  }, {\n    name: 'NLockTimeOutOfRange',\n    message: 'Block Height can only be between 0 and 499 999 999'\n  }, {\n    name: 'LockTimeTooEarly',\n    message: 'Lock Time can\\'t be earlier than UNIX date 500 000 000'\n  }]\n}, {\n  name: 'Script',\n  message: 'Internal Error on Script {0}',\n  errors: [{\n    name: 'UnrecognizedAddress',\n    message: 'Expected argument {0} to be an address'\n  }, {\n    name: 'CantDeriveAddress',\n    message: 'Can\\'t derive address associated with script {0}, needs to be p2pkh in, p2pkh out, p2sh in, or p2sh out.'\n  }, {\n    name: 'InvalidBuffer',\n    message: 'Invalid script buffer: can\\'t parse valid script from given buffer {0}'\n  }]\n}, {\n  name: 'HDPrivateKey',\n  message: 'Internal Error on HDPrivateKey {0}',\n  errors: [{\n    name: 'InvalidDerivationArgument',\n    message: 'Invalid derivation argument {0}, expected string, or number and boolean'\n  }, {\n    name: 'InvalidEntropyArgument',\n    message: 'Invalid entropy: must be an hexa string or binary buffer, got {0}',\n    errors: [{\n      name: 'TooMuchEntropy',\n      message: 'Invalid entropy: more than 512 bits is non standard, got \"{0}\"'\n    }, {\n      name: 'NotEnoughEntropy',\n      message: 'Invalid entropy: at least 128 bits needed, got \"{0}\"'\n    }]\n  }, {\n    name: 'InvalidLength',\n    message: 'Invalid length for xprivkey string in {0}'\n  }, {\n    name: 'InvalidPath',\n    message: 'Invalid derivation path: {0}'\n  }, {\n    name: 'UnrecognizedArgument',\n    message: 'Invalid argument: creating a HDPrivateKey requires a string, buffer, json or object, got \"{0}\"'\n  }]\n}, {\n  name: 'HDPublicKey',\n  message: 'Internal Error on HDPublicKey {0}',\n  errors: [{\n    name: 'ArgumentIsPrivateExtended',\n    message: 'Argument is an extended private key: {0}'\n  }, {\n    name: 'InvalidDerivationArgument',\n    message: 'Invalid derivation argument: got {0}'\n  }, {\n    name: 'InvalidLength',\n    message: 'Invalid length for xpubkey: got \"{0}\"'\n  }, {\n    name: 'InvalidPath',\n    message: 'Invalid derivation path, it should look like: \"m/1/100\", got \"{0}\"'\n  }, {\n    name: 'InvalidIndexCantDeriveHardened',\n    message: 'Invalid argument: creating a hardened path requires an HDPrivateKey'\n  }, {\n    name: 'MustSupplyArgument',\n    message: 'Must supply an argument to create a HDPublicKey'\n  }, {\n    name: 'UnrecognizedArgument',\n    message: 'Invalid argument for creation, must be string, json, buffer, or object'\n  }]\n}];","map":{"version":3,"names":["docsURL","module","exports","name","message","arguments","errors"],"sources":["C:/Users/Ndongo/Desktop/noborrar/Ethereum-Blocktick/node_modules/bitcore-lib/lib/errors/spec.js"],"sourcesContent":["'use strict';\r\n\r\nvar docsURL = 'http://bitcore.io/';\r\n\r\nmodule.exports = [{\r\n  name: 'InvalidB58Char',\r\n  message: 'Invalid Base58 character: {0} in {1}'\r\n}, {\r\n  name: 'InvalidB58Checksum',\r\n  message: 'Invalid Base58 checksum for {0}'\r\n}, {\r\n  name: 'InvalidNetwork',\r\n  message: 'Invalid version for network: got {0}'\r\n}, {\r\n  name: 'InvalidState',\r\n  message: 'Invalid state: {0}'\r\n}, {\r\n  name: 'NotImplemented',\r\n  message: 'Function {0} was not implemented yet'\r\n}, {\r\n  name: 'InvalidNetworkArgument',\r\n  message: 'Invalid network: must be \"livenet\" or \"testnet\", got {0}'\r\n}, {\r\n  name: 'InvalidArgument',\r\n  message: function() {\r\n    return 'Invalid Argument' + (arguments[0] ? (': ' + arguments[0]) : '') +\r\n      (arguments[1] ? (' Documentation: ' + docsURL + arguments[1]) : '');\r\n  }\r\n}, {\r\n  name: 'AbstractMethodInvoked',\r\n  message: 'Abstract Method Invocation: {0}'\r\n}, {\r\n  name: 'InvalidArgumentType',\r\n  message: function() {\r\n    return 'Invalid Argument for ' + arguments[2] + ', expected ' + arguments[1] + ' but got ' + typeof arguments[0];\r\n  }\r\n}, {\r\n  name: 'Unit',\r\n  message: 'Internal Error on Unit {0}',\r\n  errors: [{\r\n    'name': 'UnknownCode',\r\n    'message': 'Unrecognized unit code: {0}'\r\n  }, {\r\n    'name': 'InvalidRate',\r\n    'message': 'Invalid exchange rate: {0}'\r\n  }]\r\n}, {\r\n  name: 'MerkleBlock',\r\n  message: 'Internal Error on MerkleBlock {0}',\r\n  errors: [{\r\n    'name': 'InvalidMerkleTree',\r\n    'message': 'This MerkleBlock contain an invalid Merkle Tree'\r\n  }]\r\n}, {\r\n  name: 'Transaction',\r\n  message: 'Internal Error on Transaction {0}',\r\n  errors: [{\r\n    name: 'Input',\r\n    message: 'Internal Error on Input {0}',\r\n    errors: [{\r\n      name: 'MissingScript',\r\n      message: 'Need a script to create an input'\r\n    }, {\r\n      name: 'UnsupportedScript',\r\n      message: 'Unsupported input script type: {0}'\r\n    }, {\r\n      name: 'MissingPreviousOutput',\r\n      message: 'No previous output information.'\r\n    }, {\r\n      name: 'BlockHeightOutOfRange',\r\n      message: 'Block Height can only be between 0 and 65535'\r\n    } , {\r\n      name: 'LockTimeRange',\r\n      message: 'Seconds needs to be more that 0 and less that 33553920'\r\n    }\r\n    ]\r\n  }, {\r\n    name: 'NeedMoreInfo',\r\n    message: '{0}'\r\n  }, {\r\n    name: 'InvalidSorting',\r\n    message: 'The sorting function provided did not return the change output as one of the array elements'\r\n  }, {\r\n    name: 'InvalidOutputAmountSum',\r\n    message: '{0}'\r\n  }, {\r\n    name: 'MissingSignatures',\r\n    message: 'Some inputs have not been fully signed'\r\n  }, {\r\n    name: 'InvalidIndex',\r\n    message: 'Invalid index: {0} is not between 0, {1}'\r\n  }, {\r\n    name: 'UnableToVerifySignature',\r\n    message: 'Unable to verify signature: {0}'\r\n  }, {\r\n    name: 'DustOutputs',\r\n    message: 'Dust amount detected in one output'\r\n  }, {\r\n    name: 'InvalidSatoshis',\r\n    message: 'Output satoshis are invalid',\r\n  }, {\r\n    name: 'FeeError',\r\n    message: 'Internal Error on Fee {0}',\r\n    errors: [{\r\n      name: 'TooSmall',\r\n      message: 'Fee is too small: {0}',\r\n    }, {\r\n      name: 'TooLarge',\r\n      message: 'Fee is too large: {0}',\r\n    }, {\r\n      name: 'Different',\r\n      message: 'Unspent value is different from specified fee: {0}',\r\n    }]\r\n  }, {\r\n    name: 'ChangeAddressMissing',\r\n    message: 'Change address is missing'\r\n  }, {\r\n    name: 'BlockHeightTooHigh',\r\n    message: 'Block Height can be at most 2^32 -1'\r\n  }, {\r\n    name: 'NLockTimeOutOfRange',\r\n    message: 'Block Height can only be between 0 and 499 999 999'\r\n  }, {\r\n    name: 'LockTimeTooEarly',\r\n    message: 'Lock Time can\\'t be earlier than UNIX date 500 000 000'\r\n  }]\r\n}, {\r\n  name: 'Script',\r\n  message: 'Internal Error on Script {0}',\r\n  errors: [{\r\n    name: 'UnrecognizedAddress',\r\n    message: 'Expected argument {0} to be an address'\r\n  }, {\r\n    name: 'CantDeriveAddress',\r\n    message: 'Can\\'t derive address associated with script {0}, needs to be p2pkh in, p2pkh out, p2sh in, or p2sh out.'\r\n  }, {\r\n    name: 'InvalidBuffer',\r\n    message: 'Invalid script buffer: can\\'t parse valid script from given buffer {0}'\r\n  }]\r\n}, {\r\n  name: 'HDPrivateKey',\r\n  message: 'Internal Error on HDPrivateKey {0}',\r\n  errors: [{\r\n    name: 'InvalidDerivationArgument',\r\n    message: 'Invalid derivation argument {0}, expected string, or number and boolean'\r\n  }, {\r\n    name: 'InvalidEntropyArgument',\r\n    message: 'Invalid entropy: must be an hexa string or binary buffer, got {0}',\r\n    errors: [{\r\n      name: 'TooMuchEntropy',\r\n      message: 'Invalid entropy: more than 512 bits is non standard, got \"{0}\"'\r\n    }, {\r\n      name: 'NotEnoughEntropy',\r\n      message: 'Invalid entropy: at least 128 bits needed, got \"{0}\"'\r\n    }]\r\n  }, {\r\n    name: 'InvalidLength',\r\n    message: 'Invalid length for xprivkey string in {0}'\r\n  }, {\r\n    name: 'InvalidPath',\r\n    message: 'Invalid derivation path: {0}'\r\n  }, {\r\n    name: 'UnrecognizedArgument',\r\n    message: 'Invalid argument: creating a HDPrivateKey requires a string, buffer, json or object, got \"{0}\"'\r\n  }]\r\n}, {\r\n  name: 'HDPublicKey',\r\n  message: 'Internal Error on HDPublicKey {0}',\r\n  errors: [{\r\n    name: 'ArgumentIsPrivateExtended',\r\n    message: 'Argument is an extended private key: {0}'\r\n  }, {\r\n    name: 'InvalidDerivationArgument',\r\n    message: 'Invalid derivation argument: got {0}'\r\n  }, {\r\n    name: 'InvalidLength',\r\n    message: 'Invalid length for xpubkey: got \"{0}\"'\r\n  }, {\r\n    name: 'InvalidPath',\r\n    message: 'Invalid derivation path, it should look like: \"m/1/100\", got \"{0}\"'\r\n  }, {\r\n    name: 'InvalidIndexCantDeriveHardened',\r\n    message: 'Invalid argument: creating a hardened path requires an HDPrivateKey'\r\n  }, {\r\n    name: 'MustSupplyArgument',\r\n    message: 'Must supply an argument to create a HDPublicKey'\r\n  }, {\r\n    name: 'UnrecognizedArgument',\r\n    message: 'Invalid argument for creation, must be string, json, buffer, or object'\r\n  }]\r\n}];\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}