{"ast":null,"code":"import _asyncToGenerator from \"D:/Documentos/BLOCKCHAIN/Doble Grado BlockChain/Blockchain Engineering/TFM - Enginering - SEP 2023/BLOCKTICK ETHEREUM/BLOCKTICK/Ethereum-Blocktick/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate, __param } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport * as Mnemonic from \"bitcore-mnemonic\";\nimport { hdkey } from \"ethereumjs-wallet\";\nimport * as bip39 from \"bip39\";\nimport * as util from \"ethereumjs-util\";\nimport * as CryptoJS from \"crypto-js\";\nimport Web3 from 'web3';\nimport { Transaction } from \"ethereumjs-tx\";\nimport { blockTickABI } from \"src/app/blockTickABI\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction CreateEventsComponent_form_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"textarea\", 6);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateEventsComponent_form_0_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function CreateEventsComponent_form_0_button_6_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.removeSeeds());\n    });\n    i0.ɵɵtext(1, \"Logout\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateEventsComponent_form_0_button_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function CreateEventsComponent_form_0_button_7_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.loginWithMetamask());\n    });\n    i0.ɵɵtext(1, \"Login with Metamask\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateEventsComponent_form_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 2);\n    i0.ɵɵlistener(\"ngSubmit\", function CreateEventsComponent_form_0_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.sendLogin(ctx_r9.loginForm.value));\n    });\n    i0.ɵɵtemplate(1, CreateEventsComponent_form_0_div_1_Template, 2, 0, \"div\", 1);\n    i0.ɵɵelementStart(2, \"div\");\n    i0.ɵɵelement(3, \"input\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 4);\n    i0.ɵɵtext(5, \"Login\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, CreateEventsComponent_form_0_button_6_Template, 2, 0, \"button\", 5);\n    i0.ɵɵtemplate(7, CreateEventsComponent_form_0_button_7_Template, 2, 0, \"button\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.loginForm);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.encrypted);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.encrypted);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.encrypted);\n  }\n}\nfunction CreateEventsComponent_div_1_button_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 4);\n    i0.ɵɵtext(1, \"Send\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateEventsComponent_div_1_button_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 14);\n    i0.ɵɵtext(1, \"Sending\\u2026\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateEventsComponent_div_1_button_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 4);\n    i0.ɵɵtext(1, \"Buy\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateEventsComponent_div_1_button_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 14);\n    i0.ɵɵtext(1, \"Buying\\u2026\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateEventsComponent_div_1_button_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 4);\n    i0.ɵɵtext(1, \"Send\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateEventsComponent_div_1_button_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 14);\n    i0.ɵɵtext(1, \"Sending\\u2026\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateEventsComponent_div_1_div_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2, \"Last transaction\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\")(4, \"li\")(5, \"a\", 8);\n    i0.ɵɵtext(6, \"View transaction on Etherscan\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r17 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(5);\n    i0.ɵɵpropertyInterpolate1(\"href\", \"https://rinkeby.etherscan.io/tx/\", ctx_r17.lastTransaction.transactionHash, \"\", i0.ɵɵsanitizeUrl);\n  }\n}\nfunction CreateEventsComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h1\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4, \"Your ETH balance is: \");\n    i0.ɵɵelementStart(5, \"b\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"p\");\n    i0.ɵɵtext(8, \"You CBT balance is \");\n    i0.ɵɵelementStart(9, \"b\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"p\")(12, \"a\", 8);\n    i0.ɵɵtext(13, \"View account on Etherscan\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"h2\");\n    i0.ɵɵtext(15, \"Send Ethers\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"form\", 2);\n    i0.ɵɵlistener(\"ngSubmit\", function CreateEventsComponent_div_1_Template_form_ngSubmit_16_listener() {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.sendForm(ctx_r18.ethersForm.value));\n    });\n    i0.ɵɵelementStart(17, \"div\");\n    i0.ɵɵelement(18, \"input\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"div\");\n    i0.ɵɵelement(20, \"input\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(21, CreateEventsComponent_div_1_button_21_Template, 2, 0, \"button\", 11);\n    i0.ɵɵtemplate(22, CreateEventsComponent_div_1_button_22_Template, 2, 0, \"button\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"h2\");\n    i0.ɵɵtext(24, \"Buy CBT\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"form\", 2);\n    i0.ɵɵlistener(\"ngSubmit\", function CreateEventsComponent_div_1_Template_form_ngSubmit_25_listener() {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.buyForm(ctx_r20.tokensForm.value));\n    });\n    i0.ɵɵelementStart(26, \"div\");\n    i0.ɵɵelement(27, \"input\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(28, CreateEventsComponent_div_1_button_28_Template, 2, 0, \"button\", 11);\n    i0.ɵɵtemplate(29, CreateEventsComponent_div_1_button_29_Template, 2, 0, \"button\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(30, \"h2\");\n    i0.ɵɵtext(31, \"Send Tokens\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(32, \"form\", 2);\n    i0.ɵɵlistener(\"ngSubmit\", function CreateEventsComponent_div_1_Template_form_ngSubmit_32_listener() {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.sendTokens(ctx_r21.sendTokensForm.value));\n    });\n    i0.ɵɵelementStart(33, \"div\");\n    i0.ɵɵelement(34, \"input\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(35, \"div\");\n    i0.ɵɵelement(36, \"input\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(37, CreateEventsComponent_div_1_button_37_Template, 2, 0, \"button\", 11);\n    i0.ɵɵtemplate(38, CreateEventsComponent_div_1_button_38_Template, 2, 0, \"button\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(39, CreateEventsComponent_div_1_div_39_Template, 7, 1, \"div\", 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Hello \", ctx_r1.wallet.address, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r1.wallet.balance, \"ETH\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r1.wallet.tokens, \"CBT\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"href\", \"https://rinkeby.etherscan.io/address/\", ctx_r1.wallet.address, \"\", i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.ethersForm);\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"disabled\", ctx_r1.mining ? \"\" : null);\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"disabled\", ctx_r1.mining ? \"\" : null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.mining);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.mining);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.tokensForm);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.mining);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.mining);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.sendTokensForm);\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"disabled\", ctx_r1.mining ? \"\" : null);\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"disabled\", ctx_r1.mining ? \"\" : null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.mining);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.mining);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.lastTransaction.status);\n  }\n}\nexport class CreateEventsComponent {}\nCreateEventsComponent.ɵfac = function CreateEventsComponent_Factory(t) {\n  return new (t || CreateEventsComponent)();\n};\nCreateEventsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreateEventsComponent,\n  selectors: [[\"app-create-events\"]],\n  decls: 2,\n  vars: 2,\n  consts: [[3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [\"formControlName\", \"password\", \"type\", \"password\", \"placeholder\", \"Password\"], [\"type\", \"submit\"], [\"type\", \"button\", 3, \"click\", 4, \"ngIf\"], [\"formControlName\", \"seeds\", \"rows\", \"4\", \"placeholder\", \"Seeds\"], [\"type\", \"button\", 3, \"click\"], [\"target\", \"_blank\", 3, \"href\"], [\"formControlName\", \"to\", \"type\", \"text\", \"placeholder\", \"Address\"], [\"formControlName\", \"amount\", \"type\", \"number\", \"placeholder\", \"Amount\"], [\"type\", \"submit\", 4, \"ngIf\"], [\"type\", \"button\", \"disabled\", \"\", 4, \"ngIf\"], [\"formControlName\", \"tokens\", \"type\", \"number\", \"placeholder\", \"Tokens\"], [\"type\", \"button\", \"disabled\", \"\"]],\n  template: function CreateEventsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, CreateEventsComponent_form_0_Template, 8, 4, \"form\", 0);\n      i0.ɵɵtemplate(1, CreateEventsComponent_div_1_Template, 40, 18, \"div\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.wallet.address);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.wallet.address);\n    }\n  },\n  dependencies: [i1.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nlet AppComponent = class AppComponent {\n  constructor(document, formBuilder) {\n    this.document = document;\n    this.formBuilder = formBuilder;\n    this.wallet = {\n      address: \"\"\n    };\n    this.encrypted = '';\n    this.mining = false;\n    this.lastTransaction = {\n      //\n    };\n    this.contractAddress = '0x3a666c7b6bb146f80deda57db57da7bacb6746e9';\n    this.encrypted = window.localStorage.getItem(\"seeds\");\n    this.loginForm = this.formBuilder.group({\n      seeds: \"\",\n      password: \"\"\n    });\n    this.ethersForm = this.formBuilder.group({\n      to: \"\",\n      amount: \"\"\n    });\n    this.tokensForm = this.formBuilder.group({\n      amount: \"\"\n    });\n    this.sendTokensForm = this.formBuilder.group({\n      to: \"\",\n      tokens: \"\"\n    });\n    this.web3 = new Web3();\n    this.web3.setProvider(new this.web3.providers.HttpProvider('https://rinkeby.infura.io/v3/d09825f256ae4705a74fdee006040903'));\n    this.window = this.document.defaultView;\n    this.contract = new this.web3.eth.Contract(blockTickABI.default, this.contractAddress);\n  }\n  ngOnInit() {\n    // PALABRAS: february current defy one inform wet hurry cupboard type enable spare famous\n    // PASSWORD: password\n    this.initWallet('february current defy one inform wet hurry cupboard type enable spare famous');\n  }\n  loginWithMetamask() {\n    var _this = this;\n    this.window.ethereum.enable().then( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (accounts) {\n        var address = accounts[0];\n        _this.wallet = {\n          address,\n          balance: yield _this.web3.eth.getBalance(address).then(result => {\n            return _this.web3.utils.fromWei(result, 'ether');\n          })\n        };\n      });\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  }\n  initWallet(seeds) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      var mnemonic = new Mnemonic(seeds);\n      var seed = yield bip39.mnemonicToSeed(mnemonic.toString());\n      var path = \"m/44'/60'/0'/0/0\";\n      var wallet = hdkey.fromMasterSeed(seed).derivePath(path).getWallet();\n      var privateKey = wallet.getPrivateKey();\n      var publicKey = util.privateToPublic(privateKey);\n      var address = \"0x\" + util.pubToAddress(publicKey).toString(\"hex\");\n      var tokens = yield _this2.contract.methods.balanceOf(address).call();\n      _this2.wallet = {\n        tokens: tokens / 1000000000000000000,\n        address: address,\n        publicKey: publicKey,\n        privateKey: privateKey,\n        balance: yield _this2.web3.eth.getBalance(address).then(result => {\n          return _this2.web3.utils.fromWei(result, 'ether');\n        })\n      };\n      return _this2.wallet;\n    })();\n  }\n  removeSeeds() {\n    window.localStorage.removeItem(\"seeds\");\n    this.encrypted = null;\n    this.wallet = {\n      address: \"\"\n    };\n  }\n  sendLogin(loginData) {\n    if (!loginData.password) return alert(\"Introduce tu password\");\n    if (this.encrypted) {\n      var decrypt = CryptoJS.AES.decrypt(this.encrypted, loginData.password);\n      loginData.seeds = decrypt.toString(CryptoJS.enc.Utf8);\n    }\n    if (!Mnemonic.isValid(loginData.seeds)) {\n      return alert(\"Las semillas no son validas\");\n    }\n    this.encrypted = CryptoJS.AES.encrypt(loginData.seeds, loginData.password).toString();\n    if (this.encrypted) {\n      window.localStorage.setItem(\"seeds\", this.encrypted.toString());\n    } else {\n      window.localStorage.removeItem(\"seeds\");\n    }\n    this.loginForm.reset();\n    this.initWallet(loginData.seeds);\n  }\n  sendForm(sendData) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      if (!util.isValidAddress(sendData.to)) {\n        return alert('Introduce un address valido');\n      }\n      if (!confirm(`Enviar ${sendData.amount} WEI a ${sendData.to}?`)) {\n        return;\n      }\n      _this3.mining = true;\n      var rawData = {\n        from: _this3.wallet.address,\n        to: sendData.to,\n        value: sendData.amount,\n        gasPrice: _this3.web3.utils.toHex(10000000000),\n        gasLimit: _this3.web3.utils.toHex(1000000),\n        nonce: yield _this3.web3.eth.getTransactionCount(_this3.wallet.address)\n      };\n      var transaction = new Transaction(rawData, {\n        chain: \"ropsten\"\n      });\n      transaction.sign(_this3.wallet.privateKey);\n      var serialized = \"0x\" + transaction.serialize().toString(\"hex\");\n      // https://infura.io/docs/ethereum/json-rpc/eth_sendRawTransaction\n      _this3.web3.eth.sendSignedTransaction(serialized).then(receipt => {\n        _this3.mining = false;\n        _this3.lastTransaction = receipt;\n        console.log(receipt);\n      }, error => {\n        console.error(error);\n      });\n      _this3.ethersForm = _this3.formBuilder.group({\n        to: \"\",\n        amount: \"\"\n      });\n    })();\n  }\n  buyForm(sendData) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      _this4.mining = true;\n      var rawData = {\n        from: _this4.wallet.address,\n        to: _this4.contractAddress,\n        value: sendData.amount,\n        gasPrice: _this4.web3.utils.toHex(10000000000),\n        gasLimit: _this4.web3.utils.toHex(1000000),\n        nonce: yield _this4.web3.eth.getTransactionCount(_this4.wallet.address)\n      };\n      var transaction = new Transaction(rawData, {\n        chain: \"rinkeby\"\n      });\n      transaction.sign(_this4.wallet.privateKey);\n      var serialized = \"0x\" + transaction.serialize().toString(\"hex\");\n      _this4.web3.eth.sendSignedTransaction(serialized).then(receipt => {\n        _this4.mining = false;\n        _this4.lastTransaction = receipt;\n        console.log(receipt);\n      }, error => {\n        console.error(error);\n      });\n    })();\n  }\n  sendTokens(sendData) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      // 0x85BF10F82a05357fc64eFfdd3699cf6904FD5E9a\n      if (sendData.to == '' || sendData.tokens == '') {\n        return alert('Campos obligatorios');\n      }\n      var tokens = yield _this5.contract.methods.balanceOf(_this5.wallet.address).call();\n      tokens = tokens / 1000000000000000000;\n      if (sendData.tokens > tokens) {\n        return alert('No tienes suficientes tokens');\n      }\n      _this5.mining = true;\n      var data = _this5.contract.methods.transfer(sendData.to, sendData.tokens).encodeABI();\n      var rawData = {\n        from: _this5.wallet.address,\n        to: _this5.contractAddress,\n        value: 0,\n        gasPrice: _this5.web3.utils.toHex(10000000000),\n        gasLimit: _this5.web3.utils.toHex(1000000),\n        nonce: yield _this5.web3.eth.getTransactionCount(_this5.wallet.address),\n        data: data\n      };\n      var transaction = new Transaction(rawData, {\n        chain: \"rinkeby\"\n      });\n      transaction.sign(_this5.wallet.privateKey);\n      var serialized = \"0x\" + transaction.serialize().toString(\"hex\");\n      _this5.web3.eth.sendSignedTransaction(serialized).then(receipt => {\n        _this5.mining = false;\n        _this5.lastTransaction = receipt;\n        _this5.sendTokensForm.reset();\n        console.log(receipt);\n      }, error => {\n        console.error(error);\n      });\n      console.log(rawData);\n    })();\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n}), __param(0, Inject(DOCUMENT))], AppComponent);\nexport { AppComponent };","map":{"version":3,"mappings":"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","names":["Component","Inject","DOCUMENT","Mnemonic","hdkey","bip39","util","CryptoJS","Web3","Transaction","blockTickABI","i0","CreateEventsComponent","selectors","decls","vars","consts","template","AppComponent","constructor","document","formBuilder","address","encrypted","window","localStorage","getItem","loginForm","group","seeds","password","ethersForm","to","amount","tokensForm","sendTokensForm","tokens","web3","setProvider","providers","HttpProvider","defaultView","contract","eth","Contract","default","contractAddress","ngOnInit","initWallet","loginWithMetamask","ethereum","enable","then","accounts","wallet","balance","getBalance","result","utils","fromWei","mnemonic","seed","mnemonicToSeed","toString","path","fromMasterSeed","derivePath","getWallet","privateKey","getPrivateKey","publicKey","privateToPublic","pubToAddress","methods","balanceOf","call","removeSeeds","removeItem","sendLogin","loginData","alert","decrypt","AES","enc","Utf8","isValid","encrypt","setItem","reset","sendForm","sendData","isValidAddress","confirm","mining","rawData","from","value","gasPrice","toHex","gasLimit","nonce","getTransactionCount","transaction","chain","sign","serialized","serialize","sendSignedTransaction","receipt","lastTransaction","console","log","error","buyForm","sendTokens","data","transfer","encodeABI","selector","templateUrl","styleUrls","__param"],"sourceRoot":"","sources":["D:\\Documentos\\BLOCKCHAIN\\Doble Grado BlockChain\\Blockchain Engineering\\TFM - Enginering - SEP 2023\\BLOCKTICK ETHEREUM\\BLOCKTICK\\Ethereum-Blocktick\\src\\app\\components\\create-events\\create-events.component.ts","D:\\Documentos\\BLOCKCHAIN\\Doble Grado BlockChain\\Blockchain Engineering\\TFM - Enginering - SEP 2023\\BLOCKTICK ETHEREUM\\BLOCKTICK\\Ethereum-Blocktick\\src\\app\\components\\create-events\\create-events.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormBuilder } from \"@angular/forms\";\r\nimport { Inject } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\nimport * as Mnemonic from \"bitcore-mnemonic\";\r\nimport { hdkey } from \"ethereumjs-wallet\";\r\nimport * as bip39 from \"bip39\";\r\nimport * as util from \"ethereumjs-util\";\r\nimport * as CryptoJS from \"crypto-js\";\r\nimport Web3 from 'web3';\r\nimport { Transaction } from \"ethereumjs-tx\";\r\n\r\nimport { blockTickABI } from \"src/app/blockTickABI\"\r\n@Component({\r\n  selector: 'app-create-events',\r\n  templateUrl: './create-events.component.html',\r\n  styleUrls: ['./create-events.component.scss']\r\n})\r\nexport class CreateEventsComponent {\r\n\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  loginForm: any;\r\n  ethersForm: any;\r\n  tokensForm: any;\r\n  sendTokensForm: any;\r\n\r\n  wallet:any = {\r\n    address: \"\"\r\n  };\r\n\r\n  encrypted:string|null = '';\r\n\r\n  web3:any;\r\n\r\n  window: any;\r\n\r\n  mining:boolean = false;\r\n\r\n  lastTransaction:any = {\r\n    //\r\n  };\r\n\r\n  contract: any;\r\n\r\n  contractAddress: string = '0x3a666c7b6bb146f80deda57db57da7bacb6746e9';\r\n\r\n  constructor(@Inject(DOCUMENT) private document: Document, private formBuilder: FormBuilder) {\r\n    this.encrypted = window.localStorage.getItem(\"seeds\");\r\n\r\n    this.loginForm = this.formBuilder.group({\r\n      seeds: \"\",\r\n      password: \"\"\r\n    });\r\n\r\n    this.ethersForm = this.formBuilder.group({\r\n      to: \"\",\r\n      amount: \"\",\r\n    })\r\n\r\n    this.tokensForm = this.formBuilder.group({\r\n      amount: \"\"\r\n    })\r\n\r\n    this.sendTokensForm = this.formBuilder.group({\r\n      to: \"\",\r\n      tokens: \"\"\r\n    })\r\n\r\n    this.web3 = new Web3;\r\n\r\n    this.web3.setProvider(\r\n        new this.web3.providers.HttpProvider('https://rinkeby.infura.io/v3/d09825f256ae4705a74fdee006040903')\r\n    );\r\n\r\n    this.window = this.document.defaultView;\r\n\r\n    this.contract = new this.web3.eth.Contract(blockTickABI.default, this.contractAddress);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // PALABRAS: february current defy one inform wet hurry cupboard type enable spare famous\r\n    // PASSWORD: password\r\n    this.initWallet('february current defy one inform wet hurry cupboard type enable spare famous');\r\n  }\r\n\r\n  loginWithMetamask() {\r\n    this.window.ethereum.enable().then(async (accounts:any) => {\r\n      var address = accounts[0]\r\n      this.wallet = {\r\n        address,\r\n        balance: await this.web3.eth.getBalance(address).then((result:any) => {\r\n          return this.web3.utils.fromWei(result, 'ether');\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n  async initWallet(seeds:string) {\r\n    var mnemonic = new Mnemonic(seeds);\r\n    var seed = await bip39.mnemonicToSeed(mnemonic.toString());\r\n    var path = \"m/44'/60'/0'/0/0\";\r\n\r\n    var wallet = hdkey\r\n      .fromMasterSeed(seed)\r\n      .derivePath(path)\r\n      .getWallet();\r\n\r\n    var privateKey = wallet.getPrivateKey();\r\n    var publicKey = util.privateToPublic(privateKey);\r\n    var address = \"0x\" + util.pubToAddress(publicKey).toString(\"hex\");\r\n\r\n    var tokens = await this.contract.methods.balanceOf(address).call();\r\n\r\n    this.wallet = {\r\n      tokens: tokens / 1000000000000000000,\r\n      address: address,\r\n      publicKey: publicKey,\r\n      privateKey: privateKey,\r\n      balance: await this.web3.eth.getBalance(address).then((result:any) => {\r\n        return this.web3.utils.fromWei(result, 'ether');\r\n      })\r\n    };\r\n\r\n    return this.wallet;\r\n  }\r\n\r\n  removeSeeds() {\r\n    window.localStorage.removeItem(\"seeds\");\r\n    this.encrypted = null;\r\n\r\n    this.wallet = {\r\n      address: \"\"\r\n    };\r\n  }\r\n\r\n  sendLogin(loginData:any) {\r\n    if (!loginData.password) return alert(\"Introduce tu password\");\r\n\r\n    if (this.encrypted) {\r\n      var decrypt = CryptoJS.AES.decrypt(this.encrypted, loginData.password);\r\n\r\n      loginData.seeds = decrypt.toString(CryptoJS.enc.Utf8);\r\n    }\r\n\r\n    if (!Mnemonic.isValid(loginData.seeds)) {\r\n      return alert(\"Las semillas no son validas\");\r\n    }\r\n\r\n    this.encrypted = CryptoJS.AES.encrypt(\r\n      loginData.seeds,\r\n      loginData.password\r\n    ).toString();\r\n\r\n    if (this.encrypted) {\r\n      window.localStorage.setItem(\"seeds\", this.encrypted.toString());\r\n    } else {\r\n      window.localStorage.removeItem(\"seeds\");\r\n    }\r\n\r\n    this.loginForm.reset();\r\n\r\n    this.initWallet(loginData.seeds);\r\n  }\r\n\r\n  async sendForm(sendData:any) {\r\n    if ( ! util.isValidAddress(sendData.to)) {\r\n      return alert('Introduce un address valido');\r\n    }\r\n\r\n    if (!confirm(`Enviar ${sendData.amount} WEI a ${sendData.to}?`)) {\r\n      return;\r\n    }\r\n\r\n    this.mining = true;\r\n\r\n    var rawData = {\r\n      from: this.wallet.address,\r\n      to: sendData.to,\r\n      value: sendData.amount,\r\n      gasPrice: this.web3.utils.toHex(10000000000),\r\n      gasLimit: this.web3.utils.toHex(1000000),\r\n      nonce: await this.web3.eth.getTransactionCount(this.wallet.address)\r\n    };\r\n\r\n    var transaction = new Transaction(rawData, { chain: \"ropsten\" });\r\n\r\n    transaction.sign(this.wallet.privateKey);\r\n\r\n    var serialized = \"0x\" + transaction.serialize().toString(\"hex\");\r\n\r\n    // https://infura.io/docs/ethereum/json-rpc/eth_sendRawTransaction\r\n    this.web3.eth.sendSignedTransaction(serialized).then(\r\n      (receipt:any) => {\r\n        this.mining = false;\r\n        this.lastTransaction = receipt;\r\n        console.log(receipt);\r\n      },\r\n      (error:any) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n\r\n    this.ethersForm = this.formBuilder.group({\r\n      to: \"\",\r\n      amount: \"\",\r\n    })\r\n  }\r\n\r\n  async buyForm(sendData:any) {\r\n    this.mining = true;\r\n\r\n    var rawData = {\r\n      from: this.wallet.address,\r\n      to: this.contractAddress,\r\n      value: sendData.amount,\r\n      gasPrice: this.web3.utils.toHex(10000000000),\r\n      gasLimit: this.web3.utils.toHex(1000000),\r\n      nonce: await this.web3.eth.getTransactionCount(this.wallet.address)\r\n    };\r\n\r\n    var transaction = new Transaction(rawData, { chain: \"rinkeby\" });\r\n    transaction.sign(this.wallet.privateKey);\r\n    var serialized = \"0x\" + transaction.serialize().toString(\"hex\");\r\n\r\n    this.web3.eth.sendSignedTransaction(serialized).then(\r\n      (receipt:any) => {\r\n        this.mining = false;\r\n        this.lastTransaction = receipt;\r\n        console.log(receipt);\r\n      },\r\n      (error:any) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  async sendTokens(sendData:any) {\r\n    // 0x85BF10F82a05357fc64eFfdd3699cf6904FD5E9a\r\n    if (sendData.to == '' || sendData.tokens == '') {\r\n      return alert('Campos obligatorios');\r\n    }\r\n\r\n    var tokens = await this.contract.methods.balanceOf(this.wallet.address).call();\r\n    tokens = tokens / 1000000000000000000;\r\n\r\n    if (sendData.tokens > tokens) {\r\n      return alert('No tienes suficientes tokens');\r\n    }\r\n\r\n    this.mining = true;\r\n\r\n    var data = this.contract.methods.transfer(sendData.to, sendData.tokens).encodeABI();\r\n\r\n    var rawData = {\r\n      from: this.wallet.address,\r\n      to: this.contractAddress,\r\n      value: 0,\r\n      gasPrice: this.web3.utils.toHex(10000000000),\r\n      gasLimit: this.web3.utils.toHex(1000000),\r\n      nonce: await this.web3.eth.getTransactionCount(this.wallet.address),\r\n      data: data\r\n    };\r\n\r\n    var transaction = new Transaction(rawData, { chain: \"rinkeby\" });\r\n    transaction.sign(this.wallet.privateKey);\r\n    var serialized = \"0x\" + transaction.serialize().toString(\"hex\");\r\n\r\n    this.web3.eth.sendSignedTransaction(serialized).then(\r\n      (receipt:any) => {\r\n        this.mining = false;\r\n        this.lastTransaction = receipt;\r\n        this.sendTokensForm.reset();\r\n        console.log(receipt);\r\n      },\r\n      (error:any) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n\r\n    console.log(rawData);\r\n\r\n\r\n\r\n  }\r\n\r\n}\r\n\r\n","<form *ngIf=\"!wallet.address\" [formGroup]=\"loginForm\" (ngSubmit)=\"sendLogin(loginForm.value)\">\r\n  <div *ngIf=\"!encrypted\">\r\n    <textarea formControlName=\"seeds\" rows=\"4\" placeholder=\"Seeds\"></textarea>\r\n  </div>\r\n  <div>\r\n    <input formControlName=\"password\" type=\"password\" placeholder=\"Password\" />\r\n  </div>\r\n  <button type=\"submit\">Login</button>\r\n  <button *ngIf=\"encrypted\" type=\"button\" (click)=\"removeSeeds()\">Logout</button>\r\n  <button *ngIf=\"!encrypted\" type=\"button\" (click)=\"loginWithMetamask()\">Login with Metamask</button>\r\n</form>\r\n<div *ngIf=\"wallet.address\">\r\n  <h1>Hello {{ wallet.address }}</h1>\r\n  <p>Your ETH balance is: <b>{{ wallet.balance }}ETH</b></p>\r\n  <p>You CBT balance is <b>{{ wallet.tokens }}CBT</b></p>\r\n  <p><a href=\"https://rinkeby.etherscan.io/address/{{ wallet.address }}\" target=\"_blank\">View account on Etherscan</a></p>\r\n\r\n  <h2>Send Ethers</h2>\r\n  <form [formGroup]=\"ethersForm\" (ngSubmit)=\"sendForm(ethersForm.value)\">\r\n    <div>\r\n      <input formControlName=\"to\" type=\"text\" placeholder=\"Address\" [attr.disabled]=\"mining ? '' : null\" />\r\n    </div>\r\n    <div>\r\n      <input formControlName=\"amount\" type=\"number\" placeholder=\"Amount\" [attr.disabled]=\"mining ? '' : null\" />\r\n    </div>\r\n    <button type=\"submit\" *ngIf=\"!mining\">Send</button>\r\n    <button type=\"button\" *ngIf=\"mining\" disabled>Sending…</button>\r\n  </form>\r\n\r\n  <h2>Buy CBT</h2>\r\n  <form [formGroup]=\"tokensForm\" (ngSubmit)=\"buyForm(tokensForm.value)\">\r\n    <div>\r\n      <input formControlName=\"amount\" type=\"number\" placeholder=\"Amount\" />\r\n    </div>\r\n    <button type=\"submit\" *ngIf=\"!mining\">Buy</button>\r\n    <button type=\"button\" *ngIf=\"mining\" disabled>Buying…</button>\r\n  </form>\r\n\r\n  <h2>Send Tokens</h2>\r\n  <form [formGroup]=\"sendTokensForm\" (ngSubmit)=\"sendTokens(sendTokensForm.value)\">\r\n    <div>\r\n      <input formControlName=\"to\" type=\"text\" placeholder=\"Address\" [attr.disabled]=\"mining ? '' : null\" />\r\n    </div>\r\n    <div>\r\n      <input formControlName=\"tokens\" type=\"number\" placeholder=\"Tokens\" [attr.disabled]=\"mining ? '' : null\" />\r\n    </div>\r\n    <button type=\"submit\" *ngIf=\"!mining\">Send</button>\r\n    <button type=\"button\" *ngIf=\"mining\" disabled>Sending…</button>\r\n  </form>\r\n\r\n  <div *ngIf=\"lastTransaction.status\">\r\n    <h2>Last transaction</h2>\r\n    <ul>\r\n      <li><a href=\"https://rinkeby.etherscan.io/tx/{{ lastTransaction.transactionHash }}\" target=\"_blank\">View transaction on Etherscan</a></li>\r\n    </ul>\r\n  </div>\r\n\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}