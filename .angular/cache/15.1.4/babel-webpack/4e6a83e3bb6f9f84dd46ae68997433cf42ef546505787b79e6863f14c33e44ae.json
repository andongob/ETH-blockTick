{"ast":null,"code":"import _asyncToGenerator from \"D:/Documentos/BLOCKCHAIN/Doble Grado BlockChain/Blockchain Engineering/TFM - Enginering - SEP 2023/BLOCKTICK ETHEREUM/BLOCKTICK/Ethereum-Blocktick/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { DOCUMENT } from '@angular/common';\nimport * as Mnemonic from \"bitcore-mnemonic\";\nimport { hdkey } from \"ethereumjs-wallet\";\nimport * as bip39 from \"bip39\";\nimport * as util from \"ethereumjs-util\";\nimport * as CryptoJS from \"crypto-js\";\nimport Web3 from 'web3';\nimport { Transaction } from \"ethereumjs-tx\";\nimport { blockTickABI } from \"src/app/blockTickABI\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction CreateEventsComponent_form_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"textarea\", 7);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateEventsComponent_form_1_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function CreateEventsComponent_form_1_button_6_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.removeSeeds());\n    });\n    i0.ɵɵtext(1, \"Logout\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateEventsComponent_form_1_button_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function CreateEventsComponent_form_1_button_7_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.loginWithMetamask());\n    });\n    i0.ɵɵtext(1, \"Login with Metamask\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateEventsComponent_form_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 3);\n    i0.ɵɵlistener(\"ngSubmit\", function CreateEventsComponent_form_1_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.sendLogin(ctx_r9.loginForm.value));\n    });\n    i0.ɵɵtemplate(1, CreateEventsComponent_form_1_div_1_Template, 2, 0, \"div\", 2);\n    i0.ɵɵelementStart(2, \"div\");\n    i0.ɵɵelement(3, \"input\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 5);\n    i0.ɵɵtext(5, \"Login\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, CreateEventsComponent_form_1_button_6_Template, 2, 0, \"button\", 6);\n    i0.ɵɵtemplate(7, CreateEventsComponent_form_1_button_7_Template, 2, 0, \"button\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.loginForm);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.encrypted);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.encrypted);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.encrypted);\n  }\n}\nfunction CreateEventsComponent_div_2_button_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 5);\n    i0.ɵɵtext(1, \"Send\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateEventsComponent_div_2_button_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 14);\n    i0.ɵɵtext(1, \"Sending\\u2026\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateEventsComponent_div_2_button_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 5);\n    i0.ɵɵtext(1, \"Buy\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateEventsComponent_div_2_button_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 14);\n    i0.ɵɵtext(1, \"Buying\\u2026\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateEventsComponent_div_2_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2, \"Last transaction\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\")(4, \"li\")(5, \"a\", 9);\n    i0.ɵɵtext(6, \"View transaction on Etherscan\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(5);\n    i0.ɵɵpropertyInterpolate1(\"href\", \"https://sepolia.etherscan.io/tx/\", ctx_r15.lastTransaction.transactionHash, \"\", i0.ɵɵsanitizeUrl);\n  }\n}\nfunction CreateEventsComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h1\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4, \"Your ETH balance is: \");\n    i0.ɵɵelementStart(5, \"b\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"p\");\n    i0.ɵɵtext(8, \"You CBT balance is \");\n    i0.ɵɵelementStart(9, \"b\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"p\")(12, \"a\", 9);\n    i0.ɵɵtext(13, \"View account on Etherscan\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"h2\");\n    i0.ɵɵtext(15, \"Send Ethers\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"form\", 3);\n    i0.ɵɵlistener(\"ngSubmit\", function CreateEventsComponent_div_2_Template_form_ngSubmit_16_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.sendForm(ctx_r16.ethersForm.value));\n    });\n    i0.ɵɵelementStart(17, \"div\");\n    i0.ɵɵelement(18, \"input\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"div\");\n    i0.ɵɵelement(20, \"input\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(21, CreateEventsComponent_div_2_button_21_Template, 2, 0, \"button\", 12);\n    i0.ɵɵtemplate(22, CreateEventsComponent_div_2_button_22_Template, 2, 0, \"button\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"h2\");\n    i0.ɵɵtext(24, \"Buy CBT\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"form\", 3);\n    i0.ɵɵlistener(\"ngSubmit\", function CreateEventsComponent_div_2_Template_form_ngSubmit_25_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.buyForm(ctx_r18.tokensForm.value));\n    });\n    i0.ɵɵelementStart(26, \"div\");\n    i0.ɵɵelement(27, \"input\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(28, CreateEventsComponent_div_2_button_28_Template, 2, 0, \"button\", 12);\n    i0.ɵɵtemplate(29, CreateEventsComponent_div_2_button_29_Template, 2, 0, \"button\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(30, CreateEventsComponent_div_2_div_30_Template, 7, 1, \"div\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Hello \", ctx_r1.wallet.address, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r1.wallet.balance, \"ETH\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r1.wallet.tokens, \"CBT\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"href\", \"https://sepolia.etherscan.io/address/\", ctx_r1.wallet.address, \"\", i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.ethersForm);\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"disabled\", ctx_r1.mining ? \"\" : null);\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"disabled\", ctx_r1.mining ? \"\" : null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.mining);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.mining);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.tokensForm);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.mining);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.mining);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.lastTransaction.status);\n  }\n}\nexport class CreateEventsComponent {\n  constructor(document, formBuilder) {\n    this.document = document;\n    this.formBuilder = formBuilder;\n    this.wallet = {\n      address: '',\n      privateKey: ''\n    };\n    this.mining = false;\n    this.contractAddress = '0x3a666c7b6bb146f80deda57db57da7bacb6746e9';\n    this.window = document.defaultView;\n    this.loginForm = this.formBuilder.group({\n      seeds: '',\n      password: ''\n    });\n    this.sendForm = this.formBuilder.group({\n      to: '',\n      amount: ''\n    });\n    this.encrypted = window.localStorage.getItem('seeds');\n    //this.initWallet('february current defy one inform wet hurry cupboard type enable spare famous'); // trampa\n    //this.web3 = new Web3;\n    this.web3 = new Web3(this.window.ethereum);\n    /*\r\n    this.web3.setProvider(\r\n      new this.web3.providers.HttpProvider('https://ropsten.infura.io/v3/d09825f256ae4705a74fdee006040903')\r\n    );\r\n    */\n    this.window = this.document.defaultView;\n    this.contract = new this.web3.eth.Contract(blockTickABI.default, this.contractAddress);\n  }\n  // february current defy one inform wet hurry cupboard type enable spare famous\n  initWallet(seeds) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      var mnemonic = new Mnemonic(seeds);\n      var seed = yield bip39.mnemonicToSeed(mnemonic.toString());\n      var path = \"m/44'/60'/0'/0/0\";\n      var wallet = hdkey.fromMasterSeed(seed).derivePath(path).getWallet();\n      var privateKey = wallet.getPrivateKey();\n      var publicKey = util.privateToPublic(privateKey);\n      var address = \"0x\" + util.pubToAddress(publicKey).toString(\"hex\");\n      _this.wallet.privateKey = privateKey;\n      _this.getBalance(address);\n      _this.wallet.address = address; //indica la cuenta address, del div Hello en app.component.html una vez iniciada sesión\n      _this.wallet.balance = yield _this.web3.eth.getBalance(address).then(result => {\n        return _this.web3.utils.fromWei(result, 'ether'); // convierte el balance de Wei a Ether\n      });\n    })();\n  }\n\n  getBalance(address) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      _this2.wallet.address = address;\n      _this2.wallet.balance = yield _this2.web3.eth.getBalance(address).then(result => {\n        return _this2.web3.utils.fromWei(result, 'ether');\n      });\n    })();\n  }\n  sendLogin(loginData) {\n    if (loginData.password == '') {\n      return alert('Introduce tu contraseña');\n    }\n    if (this.encrypted) {\n      var decrypt = CryptoJS.AES.decrypt(this.encrypted, loginData.password);\n      loginData.seeds = decrypt.toString(CryptoJS.enc.Utf8);\n    }\n    if (!Mnemonic.isValid(loginData.seeds)) {\n      return alert('Semilla inválida');\n    }\n    var encrypted = CryptoJS.AES.encrypt(loginData.seeds, loginData.password).toString();\n    window.localStorage.setItem('seeds', encrypted);\n    this.loginForm.reset();\n    this.initWallet(loginData.seed);\n  }\n  loginWithMetamask() {\n    if (!this.window.ethereum) {\n      return alert('Metamask no está instalado');\n    }\n    this.window.ethereum.enable().then(accounts => {\n      let address = accounts[0];\n      this.getBalance(address);\n      this.wallet.address = address;\n    });\n  }\n  removeSeeds() {\n    window.localStorage.removeItem('seeds');\n    this.encrypted = '';\n    this.wallet = {\n      address: '',\n      balance: ''\n    };\n  }\n  sendEther(sendData) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      if (sendData.to == '' || sendData.amount == null) {\n        return alert('Campos son obligatorios');\n      }\n      if (!util.isValidAddress(sendData.to)) {\n        return alert('Dirección inválida');\n      }\n      _this3.mining = true;\n      var rawData = {\n        from: _this3.wallet.address,\n        to: sendData.to,\n        value: sendData.amount,\n        gasPrice: _this3.web3.utils.toHex(10000000000),\n        gasLimit: _this3.web3.utils.toHex(1000000)\n        //nonce: await this.web3.eth.getTransactionCount(this.wallet.address)\n      };\n\n      var signed = yield _this3.web3.eth.sendTransaction(rawData).then(receipt => {\n        console.log(\"Transaction succeeded\", receipt);\n        _this3.mining = false;\n        _this3.lastTransaction = receipt;\n        _this3.sendForm.reset();\n      });\n      //var signed = await this.web3.eth.accounts.signTransaction(rawData, this.wallet.privateKey.toString('hex'));\n      /*\r\n      this.web3.eth.sendSignedTransaction(signed.rawTransaction).then((receipt:any) => {\r\n        this.mining = false;\r\n        this.lastTransaction = receipt;\r\n              this.sendForm.reset();\r\n      });\r\n      */\n    })();\n  }\n\n  buyForm(sendData) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      _this4.mining = true;\n      var rawData = {\n        from: _this4.wallet.address,\n        to: _this4.contractAddress,\n        value: sendData.amount,\n        gasPrice: _this4.web3.utils.toHex(10000000000),\n        gasLimit: _this4.web3.utils.toHex(1000000),\n        nonce: yield _this4.web3.eth.getTransactionCount(_this4.wallet.address)\n      };\n      var transaction = new Transaction(rawData, {\n        chain: \"sepolia\"\n      });\n      transaction.sign(_this4.wallet.privateKey);\n      var serialized = \"0x\" + transaction.serialize().toString(\"hex\");\n      _this4.web3.eth.sendSignedTransaction(serialized).then(receipt => {\n        _this4.mining = false;\n        _this4.lastTransaction = receipt;\n        console.log(receipt);\n      }, error => {\n        console.error(error);\n      });\n    })();\n  }\n}\nCreateEventsComponent.ɵfac = function CreateEventsComponent_Factory(t) {\n  return new (t || CreateEventsComponent)(i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nCreateEventsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreateEventsComponent,\n  selectors: [[\"app-create-events\"]],\n  decls: 3,\n  vars: 2,\n  consts: [[2, \"text-align\", \"center\"], [3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [\"formControlName\", \"password\", \"type\", \"password\", \"placeholder\", \"Password\"], [\"type\", \"submit\"], [\"type\", \"button\", 3, \"click\", 4, \"ngIf\"], [\"formControlName\", \"seeds\", \"rows\", \"4\", \"placeholder\", \"Seeds\"], [\"type\", \"button\", 3, \"click\"], [\"target\", \"_blank\", 3, \"href\"], [\"formControlName\", \"to\", \"type\", \"text\", \"placeholder\", \"Address\"], [\"formControlName\", \"amount\", \"type\", \"number\", \"placeholder\", \"Amount\"], [\"type\", \"submit\", 4, \"ngIf\"], [\"type\", \"button\", \"disabled\", \"\", 4, \"ngIf\"], [\"type\", \"button\", \"disabled\", \"\"]],\n  template: function CreateEventsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, CreateEventsComponent_form_1_Template, 8, 4, \"form\", 1);\n      i0.ɵɵtemplate(2, CreateEventsComponent_div_2_Template, 31, 13, \"div\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.wallet.address);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.wallet.address);\n    }\n  },\n  dependencies: [i2.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["DOCUMENT","Mnemonic","hdkey","bip39","util","CryptoJS","Web3","Transaction","blockTickABI","i0","CreateEventsComponent","constructor","document","formBuilder","address","privateKey","window","defaultView","loginForm","group","seeds","password","sendForm","to","amount","encrypted","localStorage","getItem","web3","ethereum","contract","eth","Contract","default","contractAddress","initWallet","mnemonic","seed","mnemonicToSeed","toString","path","wallet","fromMasterSeed","derivePath","getWallet","getPrivateKey","publicKey","privateToPublic","pubToAddress","getBalance","balance","then","result","utils","fromWei","sendLogin","loginData","alert","decrypt","AES","enc","Utf8","isValid","encrypt","setItem","reset","loginWithMetamask","enable","accounts","removeSeeds","removeItem","sendEther","sendData","isValidAddress","mining","rawData","from","value","gasPrice","toHex","gasLimit","signed","sendTransaction","receipt","console","log","lastTransaction","buyForm","nonce","getTransactionCount","transaction","chain","sign","serialized","serialize","sendSignedTransaction","error","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\Documentos\\BLOCKCHAIN\\Doble Grado BlockChain\\Blockchain Engineering\\TFM - Enginering - SEP 2023\\BLOCKTICK ETHEREUM\\BLOCKTICK\\Ethereum-Blocktick\\src\\app\\components\\create-events\\create-events.component.ts","D:\\Documentos\\BLOCKCHAIN\\Doble Grado BlockChain\\Blockchain Engineering\\TFM - Enginering - SEP 2023\\BLOCKTICK ETHEREUM\\BLOCKTICK\\Ethereum-Blocktick\\src\\app\\components\\create-events\\create-events.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormBuilder } from \"@angular/forms\";\r\nimport { Inject } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\nimport * as Mnemonic from \"bitcore-mnemonic\";\r\nimport { hdkey } from \"ethereumjs-wallet\";\r\nimport * as bip39 from \"bip39\";\r\nimport * as util from \"ethereumjs-util\";\r\nimport * as CryptoJS from \"crypto-js\";\r\nimport Web3 from 'web3';\r\nimport { Transaction } from \"ethereumjs-tx\";\r\n\r\n\r\n\r\nimport { blockTickABI } from \"src/app/blockTickABI\";\r\n\r\n@Component({\r\n  selector: 'app-create-events',\r\n  templateUrl: './create-events.component.html',\r\n  styleUrls: ['./create-events.component.scss']\r\n})\r\nexport class CreateEventsComponent {\r\n\r\n  loginForm: any;\r\n\r\n  ethersForm: any;\r\n\r\n  tokensForm: any;\r\n\r\n  sendTokensForm: any;\r\n\r\n  sendForm: any;\r\n\r\n  encrypted: any;\r\n\r\n  wallet:any = {\r\n    address: '',\r\n    privateKey: '',\r\n  }\r\n\r\n  web3: any;\r\n\r\n  window: any;\r\n\r\n  mining = false;\r\n\r\n  lastTransaction: any;\r\n\r\n  contract: any;\r\n\r\n  contractAddress: string = '0x3a666c7b6bb146f80deda57db57da7bacb6746e9';\r\n\r\n  constructor(@Inject(DOCUMENT) private document: Document, private formBuilder: FormBuilder) {\r\n    this.window = document.defaultView;\r\n\r\n    this.loginForm = this.formBuilder.group({\r\n      seeds: '',\r\n      password: ''\r\n    });\r\n\r\n    this.sendForm = this.formBuilder.group({\r\n      to: '',\r\n      amount: ''\r\n    });\r\n\r\n    this.encrypted = window.localStorage.getItem('seeds');\r\n\r\n    //this.initWallet('february current defy one inform wet hurry cupboard type enable spare famous'); // trampa\r\n\r\n    //this.web3 = new Web3;\r\n\t\r\n\tthis.web3 = new Web3(this.window.ethereum); \r\n\r\n\t/*\r\n    this.web3.setProvider(\r\n      new this.web3.providers.HttpProvider('https://ropsten.infura.io/v3/d09825f256ae4705a74fdee006040903')\r\n    );\r\n\t*/\r\n\r\n  this.window = this.document.defaultView; \r\n  \r\n  this.contract = new this.web3.eth.Contract(blockTickABI.default, this.contractAddress);\r\n  }\r\n\r\n  // february current defy one inform wet hurry cupboard type enable spare famous\r\n  async initWallet(seeds: string) {\r\n    var mnemonic = new Mnemonic(seeds);\r\n    var seed = await bip39.mnemonicToSeed(mnemonic.toString());\r\n    var path = \"m/44'/60'/0'/0/0\";\r\n\r\n    var wallet = hdkey\r\n      .fromMasterSeed(seed)\r\n      .derivePath(path)\r\n      .getWallet();\r\n\r\n    var privateKey = wallet.getPrivateKey();\r\n    var publicKey = util.privateToPublic(privateKey);\r\n    var address = \"0x\" + util.pubToAddress(publicKey).toString(\"hex\");\r\n\r\n    this.wallet.privateKey = privateKey;\r\n\r\n    this.getBalance(address);\r\n    this.wallet.address = address; //indica la cuenta address, del div Hello en app.component.html una vez iniciada sesión\r\n\r\n this.wallet.balance = await this.web3.eth.getBalance(address).then((result:any) => {\r\n    return this.web3.utils.fromWei(result, 'ether'); // convierte el balance de Wei a Ether\r\n  });\r\n  }\r\n\r\n  async getBalance(address:string) {\r\n    this.wallet.address = address;\r\n    this.wallet.balance = await this.web3.eth.getBalance(address).then((result:any) => {\r\n      return this.web3.utils.fromWei(result, 'ether');\r\n    });\r\n  }\r\n\r\n  sendLogin(loginData:any) {\r\n    if (loginData.password == '') {\r\n      return alert('Introduce tu contraseña');\r\n    }\r\n\r\n    if (this.encrypted) {\r\n      var decrypt = CryptoJS.AES.decrypt(this.encrypted, loginData.password);\r\n      loginData.seeds = decrypt.toString(CryptoJS.enc.Utf8);\r\n    }\r\n\r\n    if (!Mnemonic.isValid(loginData.seeds)) {\r\n      return alert('Semilla inválida');\r\n    }\r\n\r\n    var encrypted = CryptoJS.AES.encrypt(loginData.seeds, loginData.password).toString();\r\n\r\n    window.localStorage.setItem('seeds', encrypted);\r\n\r\n    this.loginForm.reset();\r\n\r\n    this.initWallet(loginData.seed);\r\n  }\r\n\r\n  loginWithMetamask() {\r\n    if (!this.window.ethereum) {\r\n      return alert('Metamask no está instalado');\r\n    }\r\n\r\n    this.window.ethereum.enable().then((accounts:any) => {\r\n      let address = accounts[0];\r\n      this.getBalance(address);\r\n\t  this.wallet.address = address;\r\n    });\r\n  }\r\n\r\n  removeSeeds() {\r\n    window.localStorage.removeItem('seeds');\r\n    this.encrypted = '';\r\n    this.wallet = {\r\n      address: '',\r\n      balance: ''\r\n    };\r\n  }\r\n\r\n  async sendEther(sendData:any) {\r\n    if (sendData.to == '' || sendData.amount == null) {\r\n      return alert('Campos son obligatorios');\r\n    }\r\n\r\n    if ( ! util.isValidAddress(sendData.to)) {\r\n      return alert('Dirección inválida');\r\n    }\r\n\r\n    this.mining = true;\r\n\r\n    var rawData = {\r\n      from: this.wallet.address,\r\n      to: sendData.to,\r\n      value: sendData.amount,\r\n      gasPrice: this.web3.utils.toHex(10000000000),\r\n      gasLimit: this.web3.utils.toHex(1000000),\r\n      //nonce: await this.web3.eth.getTransactionCount(this.wallet.address)\r\n    };\r\n\r\n\tvar signed = await this.web3.eth.sendTransaction(rawData).then((receipt:any) => {\r\n\t\r\n  \t  console.log(\"Transaction succeeded\", receipt);\t\t\r\n      this.mining = false;\r\n      this.lastTransaction = receipt;\r\n\r\n      this.sendForm.reset();\r\n    });\r\n\t\r\n    //var signed = await this.web3.eth.accounts.signTransaction(rawData, this.wallet.privateKey.toString('hex'));\r\n\r\n\t/*\r\n    this.web3.eth.sendSignedTransaction(signed.rawTransaction).then((receipt:any) => {\r\n      this.mining = false;\r\n      this.lastTransaction = receipt;\r\n\r\n      this.sendForm.reset();\r\n    });\r\n\t*/\r\n  }\r\n\r\n  async buyForm(sendData:any) {\r\n    this.mining = true;\r\n\r\n    var rawData = {\r\n      from: this.wallet.address,\r\n      to: this.contractAddress,\r\n      value: sendData.amount,\r\n      gasPrice: this.web3.utils.toHex(10000000000),\r\n      gasLimit: this.web3.utils.toHex(1000000),\r\n      nonce: await this.web3.eth.getTransactionCount(this.wallet.address)\r\n    };\r\n\r\n    var transaction = new Transaction(rawData, { chain: \"sepolia\" });\r\n    transaction.sign(this.wallet.privateKey);\r\n    var serialized = \"0x\" + transaction.serialize().toString(\"hex\");\r\n\r\n    this.web3.eth.sendSignedTransaction(serialized).then(\r\n      (receipt:any) => {\r\n        this.mining = false;\r\n        this.lastTransaction = receipt;\r\n        console.log(receipt);\r\n      },\r\n      (error:any) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n\r\n\r\n    \r\n  }\r\n\r\n}","<div style=\"text-align: center;\">\r\n\r\n  <form *ngIf=\"!wallet.address\" [formGroup]=\"loginForm\" (ngSubmit)=\"sendLogin(loginForm.value)\">\r\n    <div *ngIf=\"!encrypted\">\r\n      <textarea formControlName=\"seeds\" rows=\"4\" placeholder=\"Seeds\"></textarea>\r\n    </div>\r\n    <div>\r\n      <input formControlName=\"password\" type=\"password\" placeholder=\"Password\" />\r\n    </div>\r\n    <button type=\"submit\">Login</button>\r\n    <button *ngIf=\"encrypted\" type=\"button\" (click)=\"removeSeeds()\">Logout</button>\r\n    <button *ngIf=\"!encrypted\" type=\"button\" (click)=\"loginWithMetamask()\">Login with Metamask</button>\r\n  </form>\r\n  <div *ngIf=\"wallet.address\">\r\n    <h1>Hello {{ wallet.address }}</h1>\r\n    <p>Your ETH balance is: <b>{{ wallet.balance }}ETH</b></p>\r\n    <p>You CBT balance is <b>{{ wallet.tokens }}CBT</b></p>\r\n    <p><a href=\"https://sepolia.etherscan.io/address/{{ wallet.address }}\" target=\"_blank\">View account on Etherscan</a></p>\r\n  \r\n    <h2>Send Ethers</h2>\r\n    <form [formGroup]=\"ethersForm\" (ngSubmit)=\"sendForm(ethersForm.value)\">\r\n      <div>\r\n        <input formControlName=\"to\" type=\"text\" placeholder=\"Address\" [attr.disabled]=\"mining ? '' : null\" />\r\n      </div>\r\n      <div>\r\n        <input formControlName=\"amount\" type=\"number\" placeholder=\"Amount\" [attr.disabled]=\"mining ? '' : null\" />\r\n      </div>\r\n      <button type=\"submit\" *ngIf=\"!mining\">Send</button>\r\n      <button type=\"button\" *ngIf=\"mining\" disabled>Sending…</button>\r\n    </form>\r\n  \r\n    <h2>Buy CBT</h2>\r\n    <form [formGroup]=\"tokensForm\" (ngSubmit)=\"buyForm(tokensForm.value)\">\r\n      <div>\r\n        <input formControlName=\"amount\" type=\"number\" placeholder=\"Amount\" />\r\n      </div>\r\n      <button type=\"submit\" *ngIf=\"!mining\">Buy</button>\r\n      <button type=\"button\" *ngIf=\"mining\" disabled>Buying…</button>\r\n    </form>\r\n  \r\n  \r\n    <div *ngIf=\"lastTransaction.status\">\r\n      <h2>Last transaction</h2>\r\n      <ul>\r\n        <li><a href=\"https://sepolia.etherscan.io/tx/{{ lastTransaction.transactionHash }}\" target=\"_blank\">View transaction on Etherscan</a></li>\r\n      </ul>\r\n    </div>\r\n  \r\n  </div>\r\n  </div>    \r\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}