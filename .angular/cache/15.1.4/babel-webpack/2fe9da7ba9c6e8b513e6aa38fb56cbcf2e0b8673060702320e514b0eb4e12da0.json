{"ast":null,"code":"\"use strict\";\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar secp256k1 = __importStar(require(\"secp256k1\"));\nfunction privateKeyVerify(privateKey) {\n  return secp256k1.privateKeyVerify(privateKey);\n}\nexports.privateKeyVerify = privateKeyVerify;\nfunction publicKeyCreate(privateKey, compressed) {\n  if (compressed === void 0) {\n    compressed = true;\n  }\n  return Buffer.from(secp256k1.publicKeyCreate(privateKey, compressed));\n}\nexports.publicKeyCreate = publicKeyCreate;\nfunction publicKeyVerify(publicKey) {\n  return secp256k1.publicKeyVerify(publicKey);\n}\nexports.publicKeyVerify = publicKeyVerify;\nfunction publicKeyConvert(publicKey, compressed) {\n  if (compressed === void 0) {\n    compressed = true;\n  }\n  return Buffer.from(secp256k1.publicKeyConvert(publicKey, compressed));\n}\nexports.publicKeyConvert = publicKeyConvert;\nfunction privateKeyTweakAdd(publicKey, tweak) {\n  return Buffer.from(secp256k1.privateKeyTweakAdd(Buffer.from(publicKey), tweak));\n}\nexports.privateKeyTweakAdd = privateKeyTweakAdd;\nfunction publicKeyTweakAdd(publicKey, tweak, compressed) {\n  if (compressed === void 0) {\n    compressed = true;\n  }\n  return Buffer.from(secp256k1.publicKeyTweakAdd(Buffer.from(publicKey), tweak, compressed));\n}\nexports.publicKeyTweakAdd = publicKeyTweakAdd;\nfunction sign(message, privateKey) {\n  var ret = secp256k1.ecdsaSign(message, privateKey);\n  return {\n    signature: Buffer.from(ret.signature),\n    recovery: ret.recid\n  };\n}\nexports.sign = sign;\nfunction verify(message, signature, publicKey) {\n  return secp256k1.ecdsaVerify(signature, message, publicKey);\n}\nexports.verify = verify;","map":{"version":3,"names":["__importStar","mod","__esModule","result","k","Object","hasOwnProperty","call","defineProperty","exports","value","secp256k1","require","privateKeyVerify","privateKey","publicKeyCreate","compressed","Buffer","from","publicKeyVerify","publicKey","publicKeyConvert","privateKeyTweakAdd","tweak","publicKeyTweakAdd","sign","message","ret","ecdsaSign","signature","recovery","recid","verify","ecdsaVerify"],"sources":["C:/Users/Ndongo/Desktop/noborrar/Ethereum-Blocktick/node_modules/ethereum-cryptography/shims/hdkey-secp256k1v3.js"],"sourcesContent":["\"use strict\";\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result[\"default\"] = mod;\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar secp256k1 = __importStar(require(\"secp256k1\"));\r\nfunction privateKeyVerify(privateKey) {\r\n    return secp256k1.privateKeyVerify(privateKey);\r\n}\r\nexports.privateKeyVerify = privateKeyVerify;\r\nfunction publicKeyCreate(privateKey, compressed) {\r\n    if (compressed === void 0) { compressed = true; }\r\n    return Buffer.from(secp256k1.publicKeyCreate(privateKey, compressed));\r\n}\r\nexports.publicKeyCreate = publicKeyCreate;\r\nfunction publicKeyVerify(publicKey) {\r\n    return secp256k1.publicKeyVerify(publicKey);\r\n}\r\nexports.publicKeyVerify = publicKeyVerify;\r\nfunction publicKeyConvert(publicKey, compressed) {\r\n    if (compressed === void 0) { compressed = true; }\r\n    return Buffer.from(secp256k1.publicKeyConvert(publicKey, compressed));\r\n}\r\nexports.publicKeyConvert = publicKeyConvert;\r\nfunction privateKeyTweakAdd(publicKey, tweak) {\r\n    return Buffer.from(secp256k1.privateKeyTweakAdd(Buffer.from(publicKey), tweak));\r\n}\r\nexports.privateKeyTweakAdd = privateKeyTweakAdd;\r\nfunction publicKeyTweakAdd(publicKey, tweak, compressed) {\r\n    if (compressed === void 0) { compressed = true; }\r\n    return Buffer.from(secp256k1.publicKeyTweakAdd(Buffer.from(publicKey), tweak, compressed));\r\n}\r\nexports.publicKeyTweakAdd = publicKeyTweakAdd;\r\nfunction sign(message, privateKey) {\r\n    var ret = secp256k1.ecdsaSign(message, privateKey);\r\n    return { signature: Buffer.from(ret.signature), recovery: ret.recid };\r\n}\r\nexports.sign = sign;\r\nfunction verify(message, signature, publicKey) {\r\n    return secp256k1.ecdsaVerify(signature, message, publicKey);\r\n}\r\nexports.verify = verify;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}