{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toType = exports.TypeOutput = exports.bnToRlp = exports.bnToUnpaddedBuffer = exports.bnToHex = void 0;\nvar externals_1 = require(\"./externals\");\nvar internal_1 = require(\"./internal\");\nvar bytes_1 = require(\"./bytes\");\n/**\r\n * Convert BN to 0x-prefixed hex string.\r\n */\nfunction bnToHex(value) {\n  return \"0x\".concat(value.toString(16));\n}\nexports.bnToHex = bnToHex;\n/**\r\n * Convert value from BN to an unpadded Buffer\r\n * (useful for RLP transport)\r\n * @param value value to convert\r\n */\nfunction bnToUnpaddedBuffer(value) {\n  // Using `bn.toArrayLike(Buffer)` instead of `bn.toBuffer()`\n  // for compatibility with browserify and similar tools\n  return (0, bytes_1.unpadBuffer)(value.toArrayLike(Buffer));\n}\nexports.bnToUnpaddedBuffer = bnToUnpaddedBuffer;\n/**\r\n * Deprecated alias for {@link bnToUnpaddedBuffer}\r\n * @deprecated\r\n */\nfunction bnToRlp(value) {\n  return bnToUnpaddedBuffer(value);\n}\nexports.bnToRlp = bnToRlp;\n/**\r\n * Type output options\r\n */\nvar TypeOutput;\n(function (TypeOutput) {\n  TypeOutput[TypeOutput[\"Number\"] = 0] = \"Number\";\n  TypeOutput[TypeOutput[\"BN\"] = 1] = \"BN\";\n  TypeOutput[TypeOutput[\"Buffer\"] = 2] = \"Buffer\";\n  TypeOutput[TypeOutput[\"PrefixedHexString\"] = 3] = \"PrefixedHexString\";\n})(TypeOutput = exports.TypeOutput || (exports.TypeOutput = {}));\nfunction toType(input, outputType) {\n  if (input === null) {\n    return null;\n  }\n  if (input === undefined) {\n    return undefined;\n  }\n  if (typeof input === 'string' && !(0, internal_1.isHexString)(input)) {\n    throw new Error(\"A string must be provided with a 0x-prefix, given: \".concat(input));\n  } else if (typeof input === 'number' && !Number.isSafeInteger(input)) {\n    throw new Error('The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)');\n  }\n  var output = (0, bytes_1.toBuffer)(input);\n  if (outputType === TypeOutput.Buffer) {\n    return output;\n  } else if (outputType === TypeOutput.BN) {\n    return new externals_1.BN(output);\n  } else if (outputType === TypeOutput.Number) {\n    var bn = new externals_1.BN(output);\n    var max = new externals_1.BN(Number.MAX_SAFE_INTEGER.toString());\n    if (bn.gt(max)) {\n      throw new Error('The provided number is greater than MAX_SAFE_INTEGER (please use an alternative output type)');\n    }\n    return bn.toNumber();\n  } else {\n    // outputType === TypeOutput.PrefixedHexString\n    return \"0x\".concat(output.toString('hex'));\n  }\n}\nexports.toType = toType;","map":{"version":3,"names":["Object","defineProperty","exports","value","toType","TypeOutput","bnToRlp","bnToUnpaddedBuffer","bnToHex","externals_1","require","internal_1","bytes_1","concat","toString","unpadBuffer","toArrayLike","Buffer","input","outputType","undefined","isHexString","Error","Number","isSafeInteger","output","toBuffer","BN","bn","max","MAX_SAFE_INTEGER","gt","toNumber"],"sources":["C:/Users/Ndongo/Desktop/noborrar/Ethereum-Blocktick/node_modules/ethereumjs-util/dist.browser/types.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.toType = exports.TypeOutput = exports.bnToRlp = exports.bnToUnpaddedBuffer = exports.bnToHex = void 0;\r\nvar externals_1 = require(\"./externals\");\r\nvar internal_1 = require(\"./internal\");\r\nvar bytes_1 = require(\"./bytes\");\r\n/**\r\n * Convert BN to 0x-prefixed hex string.\r\n */\r\nfunction bnToHex(value) {\r\n    return \"0x\".concat(value.toString(16));\r\n}\r\nexports.bnToHex = bnToHex;\r\n/**\r\n * Convert value from BN to an unpadded Buffer\r\n * (useful for RLP transport)\r\n * @param value value to convert\r\n */\r\nfunction bnToUnpaddedBuffer(value) {\r\n    // Using `bn.toArrayLike(Buffer)` instead of `bn.toBuffer()`\r\n    // for compatibility with browserify and similar tools\r\n    return (0, bytes_1.unpadBuffer)(value.toArrayLike(Buffer));\r\n}\r\nexports.bnToUnpaddedBuffer = bnToUnpaddedBuffer;\r\n/**\r\n * Deprecated alias for {@link bnToUnpaddedBuffer}\r\n * @deprecated\r\n */\r\nfunction bnToRlp(value) {\r\n    return bnToUnpaddedBuffer(value);\r\n}\r\nexports.bnToRlp = bnToRlp;\r\n/**\r\n * Type output options\r\n */\r\nvar TypeOutput;\r\n(function (TypeOutput) {\r\n    TypeOutput[TypeOutput[\"Number\"] = 0] = \"Number\";\r\n    TypeOutput[TypeOutput[\"BN\"] = 1] = \"BN\";\r\n    TypeOutput[TypeOutput[\"Buffer\"] = 2] = \"Buffer\";\r\n    TypeOutput[TypeOutput[\"PrefixedHexString\"] = 3] = \"PrefixedHexString\";\r\n})(TypeOutput = exports.TypeOutput || (exports.TypeOutput = {}));\r\nfunction toType(input, outputType) {\r\n    if (input === null) {\r\n        return null;\r\n    }\r\n    if (input === undefined) {\r\n        return undefined;\r\n    }\r\n    if (typeof input === 'string' && !(0, internal_1.isHexString)(input)) {\r\n        throw new Error(\"A string must be provided with a 0x-prefix, given: \".concat(input));\r\n    }\r\n    else if (typeof input === 'number' && !Number.isSafeInteger(input)) {\r\n        throw new Error('The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)');\r\n    }\r\n    var output = (0, bytes_1.toBuffer)(input);\r\n    if (outputType === TypeOutput.Buffer) {\r\n        return output;\r\n    }\r\n    else if (outputType === TypeOutput.BN) {\r\n        return new externals_1.BN(output);\r\n    }\r\n    else if (outputType === TypeOutput.Number) {\r\n        var bn = new externals_1.BN(output);\r\n        var max = new externals_1.BN(Number.MAX_SAFE_INTEGER.toString());\r\n        if (bn.gt(max)) {\r\n            throw new Error('The provided number is greater than MAX_SAFE_INTEGER (please use an alternative output type)');\r\n        }\r\n        return bn.toNumber();\r\n    }\r\n    else {\r\n        // outputType === TypeOutput.PrefixedHexString\r\n        return \"0x\".concat(output.toString('hex'));\r\n    }\r\n}\r\nexports.toType = toType;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}