{"ast":null,"code":"'use strict';\n\nvar bufferUtil = require('../util/buffer');\nvar assert = require('assert');\nvar BufferWriter = function BufferWriter(obj) {\n  if (!(this instanceof BufferWriter)) return new BufferWriter(obj);\n  this.bufLen = 0;\n  if (obj) this.set(obj);else this.bufs = [];\n};\nBufferWriter.prototype.set = function (obj) {\n  this.bufs = obj.bufs || this.bufs || [];\n  this.bufLen = this.bufs.reduce(function (prev, buf) {\n    return prev + buf.length;\n  }, 0);\n  return this;\n};\nBufferWriter.prototype.toBuffer = function () {\n  return this.concat();\n};\nBufferWriter.prototype.concat = function () {\n  return Buffer.concat(this.bufs, this.bufLen);\n};\nBufferWriter.prototype.write = function (buf) {\n  assert(bufferUtil.isBuffer(buf));\n  this.bufs.push(buf);\n  this.bufLen += buf.length;\n  return this;\n};\nBufferWriter.prototype.writeReverse = function (buf) {\n  assert(bufferUtil.isBuffer(buf));\n  this.bufs.push(bufferUtil.reverse(buf));\n  this.bufLen += buf.length;\n  return this;\n};\nBufferWriter.prototype.writeUInt8 = function (n) {\n  var buf = Buffer.alloc(1);\n  buf.writeUInt8(n, 0);\n  this.write(buf);\n  return this;\n};\nBufferWriter.prototype.writeUInt16BE = function (n) {\n  var buf = Buffer.alloc(2);\n  buf.writeUInt16BE(n, 0);\n  this.write(buf);\n  return this;\n};\nBufferWriter.prototype.writeUInt16LE = function (n) {\n  var buf = Buffer.alloc(2);\n  buf.writeUInt16LE(n, 0);\n  this.write(buf);\n  return this;\n};\nBufferWriter.prototype.writeUInt32BE = function (n) {\n  var buf = Buffer.alloc(4);\n  buf.writeUInt32BE(n, 0);\n  this.write(buf);\n  return this;\n};\nBufferWriter.prototype.writeInt32LE = function (n) {\n  var buf = Buffer.alloc(4);\n  buf.writeInt32LE(n, 0);\n  this.write(buf);\n  return this;\n};\nBufferWriter.prototype.writeUInt32LE = function (n) {\n  var buf = Buffer.alloc(4);\n  buf.writeUInt32LE(n, 0);\n  this.write(buf);\n  return this;\n};\nBufferWriter.prototype.writeUInt64BEBN = function (bn) {\n  var buf = bn.toBuffer({\n    size: 8\n  });\n  this.write(buf);\n  return this;\n};\nBufferWriter.prototype.writeUInt64LEBN = function (bn) {\n  var buf = bn.toBuffer({\n    size: 8\n  });\n  this.writeReverse(buf);\n  return this;\n};\nBufferWriter.prototype.writeVarintNum = function (n) {\n  var buf = BufferWriter.varintBufNum(n);\n  this.write(buf);\n  return this;\n};\nBufferWriter.prototype.writeVarintBN = function (bn) {\n  var buf = BufferWriter.varintBufBN(bn);\n  this.write(buf);\n  return this;\n};\nBufferWriter.varintBufNum = function (n) {\n  var buf = undefined;\n  if (n < 253) {\n    buf = Buffer.alloc(1);\n    buf.writeUInt8(n, 0);\n  } else if (n < 0x10000) {\n    buf = Buffer.alloc(1 + 2);\n    buf.writeUInt8(253, 0);\n    buf.writeUInt16LE(n, 1);\n  } else if (n < 0x100000000) {\n    buf = Buffer.alloc(1 + 4);\n    buf.writeUInt8(254, 0);\n    buf.writeUInt32LE(n, 1);\n  } else {\n    buf = Buffer.alloc(1 + 8);\n    buf.writeUInt8(255, 0);\n    buf.writeInt32LE(n & -1, 1);\n    buf.writeUInt32LE(Math.floor(n / 0x100000000), 5);\n  }\n  return buf;\n};\nBufferWriter.varintBufBN = function (bn) {\n  var buf = undefined;\n  var n = bn.toNumber();\n  if (n < 253) {\n    buf = Buffer.alloc(1);\n    buf.writeUInt8(n, 0);\n  } else if (n < 0x10000) {\n    buf = Buffer.alloc(1 + 2);\n    buf.writeUInt8(253, 0);\n    buf.writeUInt16LE(n, 1);\n  } else if (n < 0x100000000) {\n    buf = Buffer.alloc(1 + 4);\n    buf.writeUInt8(254, 0);\n    buf.writeUInt32LE(n, 1);\n  } else {\n    var bw = new BufferWriter();\n    bw.writeUInt8(255);\n    bw.writeUInt64LEBN(bn);\n    var buf = bw.concat();\n  }\n  return buf;\n};\nmodule.exports = BufferWriter;","map":{"version":3,"names":["bufferUtil","require","assert","BufferWriter","obj","bufLen","set","bufs","prototype","reduce","prev","buf","length","toBuffer","concat","Buffer","write","isBuffer","push","writeReverse","reverse","writeUInt8","n","alloc","writeUInt16BE","writeUInt16LE","writeUInt32BE","writeInt32LE","writeUInt32LE","writeUInt64BEBN","bn","size","writeUInt64LEBN","writeVarintNum","varintBufNum","writeVarintBN","varintBufBN","undefined","Math","floor","toNumber","bw","module","exports"],"sources":["D:/Documentos/BLOCKCHAIN/Doble Grado BlockChain/Blockchain Engineering/TFG - Enginering/BLOCKTICK/blocktick_dApp/node_modules/bitcore-lib/lib/encoding/bufferwriter.js"],"sourcesContent":["'use strict';\n\nvar bufferUtil = require('../util/buffer');\nvar assert = require('assert');\n\nvar BufferWriter = function BufferWriter(obj) {\n  if (!(this instanceof BufferWriter))\n    return new BufferWriter(obj);\n  this.bufLen = 0;\n  if (obj)\n    this.set(obj);\n  else\n    this.bufs = [];\n};\n\nBufferWriter.prototype.set = function(obj) {\n  this.bufs = obj.bufs || this.bufs || [];\n  this.bufLen = this.bufs.reduce(function(prev, buf){ return prev + buf.length; }, 0);\n  return this;\n};\n\nBufferWriter.prototype.toBuffer = function() {\n  return this.concat();\n};\n\nBufferWriter.prototype.concat = function() {\n  return Buffer.concat(this.bufs, this.bufLen);\n};\n\nBufferWriter.prototype.write = function(buf) {\n  assert(bufferUtil.isBuffer(buf));\n  this.bufs.push(buf);\n  this.bufLen += buf.length;\n  return this;\n};\n\nBufferWriter.prototype.writeReverse = function(buf) {\n  assert(bufferUtil.isBuffer(buf));\n  this.bufs.push(bufferUtil.reverse(buf));\n  this.bufLen += buf.length;\n  return this;\n};\n\nBufferWriter.prototype.writeUInt8 = function(n) {\n  var buf = Buffer.alloc(1);\n  buf.writeUInt8(n, 0);\n  this.write(buf);\n  return this;\n};\n\nBufferWriter.prototype.writeUInt16BE = function(n) {\n  var buf = Buffer.alloc(2);\n  buf.writeUInt16BE(n, 0);\n  this.write(buf);\n  return this;\n};\n\nBufferWriter.prototype.writeUInt16LE = function(n) {\n  var buf = Buffer.alloc(2);\n  buf.writeUInt16LE(n, 0);\n  this.write(buf);\n  return this;\n};\n\nBufferWriter.prototype.writeUInt32BE = function(n) {\n  var buf = Buffer.alloc(4);\n  buf.writeUInt32BE(n, 0);\n  this.write(buf);\n  return this;\n};\n\nBufferWriter.prototype.writeInt32LE = function(n) {\n  var buf = Buffer.alloc(4);\n  buf.writeInt32LE(n, 0);\n  this.write(buf);\n  return this;\n};\n\nBufferWriter.prototype.writeUInt32LE = function(n) {\n  var buf = Buffer.alloc(4);\n  buf.writeUInt32LE(n, 0);\n  this.write(buf);\n  return this;\n};\n\nBufferWriter.prototype.writeUInt64BEBN = function(bn) {\n  var buf = bn.toBuffer({size: 8});\n  this.write(buf);\n  return this;\n};\n\nBufferWriter.prototype.writeUInt64LEBN = function(bn) {\n  var buf = bn.toBuffer({size: 8});\n  this.writeReverse(buf);\n  return this;\n};\n\nBufferWriter.prototype.writeVarintNum = function(n) {\n  var buf = BufferWriter.varintBufNum(n);\n  this.write(buf);\n  return this;\n};\n\nBufferWriter.prototype.writeVarintBN = function(bn) {\n  var buf = BufferWriter.varintBufBN(bn);\n  this.write(buf);\n  return this;\n};\n\nBufferWriter.varintBufNum = function(n) {\n  var buf = undefined;\n  if (n < 253) {\n    buf = Buffer.alloc(1);\n    buf.writeUInt8(n, 0);\n  } else if (n < 0x10000) {\n    buf = Buffer.alloc(1 + 2);\n    buf.writeUInt8(253, 0);\n    buf.writeUInt16LE(n, 1);\n  } else if (n < 0x100000000) {\n    buf = Buffer.alloc(1 + 4);\n    buf.writeUInt8(254, 0);\n    buf.writeUInt32LE(n, 1);\n  } else {\n    buf = Buffer.alloc(1 + 8);\n    buf.writeUInt8(255, 0);\n    buf.writeInt32LE(n & -1, 1);\n    buf.writeUInt32LE(Math.floor(n / 0x100000000), 5);\n  }\n  return buf;\n};\n\nBufferWriter.varintBufBN = function(bn) {\n  var buf = undefined;\n  var n = bn.toNumber();\n  if (n < 253) {\n    buf = Buffer.alloc(1);\n    buf.writeUInt8(n, 0);\n  } else if (n < 0x10000) {\n    buf = Buffer.alloc(1 + 2);\n    buf.writeUInt8(253, 0);\n    buf.writeUInt16LE(n, 1);\n  } else if (n < 0x100000000) {\n    buf = Buffer.alloc(1 + 4);\n    buf.writeUInt8(254, 0);\n    buf.writeUInt32LE(n, 1);\n  } else {\n    var bw = new BufferWriter();\n    bw.writeUInt8(255);\n    bw.writeUInt64LEBN(bn);\n    var buf = bw.concat();\n  }\n  return buf;\n};\n\nmodule.exports = BufferWriter;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}