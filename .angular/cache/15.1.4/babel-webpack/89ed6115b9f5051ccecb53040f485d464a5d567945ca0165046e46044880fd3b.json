{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defineProperties = void 0;\nvar assert_1 = __importDefault(require(\"assert\"));\nvar internal_1 = require(\"./internal\");\nvar externals_1 = require(\"./externals\");\nvar bytes_1 = require(\"./bytes\");\n/**\n * Defines properties on a `Object`. It make the assumption that underlying data is binary.\n * @param self the `Object` to define properties on\n * @param fields an array fields to define. Fields can contain:\n * * `name` - the name of the properties\n * * `length` - the number of bytes the field can have\n * * `allowLess` - if the field can be less than the length\n * * `allowEmpty`\n * @param data data to be validated against the definitions\n * @deprecated\n */\nvar defineProperties = function (self, fields, data) {\n  self.raw = [];\n  self._fields = [];\n  // attach the `toJSON`\n  self.toJSON = function (label) {\n    if (label === void 0) {\n      label = false;\n    }\n    if (label) {\n      var obj_1 = {};\n      self._fields.forEach(function (field) {\n        obj_1[field] = \"0x\".concat(self[field].toString('hex'));\n      });\n      return obj_1;\n    }\n    return (0, bytes_1.baToJSON)(self.raw);\n  };\n  self.serialize = function serialize() {\n    return externals_1.rlp.encode(self.raw);\n  };\n  fields.forEach(function (field, i) {\n    self._fields.push(field.name);\n    function getter() {\n      return self.raw[i];\n    }\n    function setter(v) {\n      v = (0, bytes_1.toBuffer)(v);\n      if (v.toString('hex') === '00' && !field.allowZero) {\n        v = Buffer.allocUnsafe(0);\n      }\n      if (field.allowLess && field.length) {\n        v = (0, bytes_1.unpadBuffer)(v);\n        (0, assert_1.default)(field.length >= v.length, \"The field \".concat(field.name, \" must not have more \").concat(field.length, \" bytes\"));\n      } else if (!(field.allowZero && v.length === 0) && field.length) {\n        (0, assert_1.default)(field.length === v.length, \"The field \".concat(field.name, \" must have byte length of \").concat(field.length));\n      }\n      self.raw[i] = v;\n    }\n    Object.defineProperty(self, field.name, {\n      enumerable: true,\n      configurable: true,\n      get: getter,\n      set: setter\n    });\n    if (field.default) {\n      self[field.name] = field.default;\n    }\n    // attach alias\n    if (field.alias) {\n      Object.defineProperty(self, field.alias, {\n        enumerable: false,\n        configurable: true,\n        set: setter,\n        get: getter\n      });\n    }\n  });\n  // if the constuctor is passed data\n  if (data) {\n    if (typeof data === 'string') {\n      data = Buffer.from((0, internal_1.stripHexPrefix)(data), 'hex');\n    }\n    if (Buffer.isBuffer(data)) {\n      data = externals_1.rlp.decode(data);\n    }\n    if (Array.isArray(data)) {\n      if (data.length > self._fields.length) {\n        throw new Error('wrong number of fields in data');\n      }\n      // make sure all the items are buffers\n      data.forEach(function (d, i) {\n        self[self._fields[i]] = (0, bytes_1.toBuffer)(d);\n      });\n    } else if (typeof data === 'object') {\n      var keys_1 = Object.keys(data);\n      fields.forEach(function (field) {\n        if (keys_1.indexOf(field.name) !== -1) self[field.name] = data[field.name];\n        if (keys_1.indexOf(field.alias) !== -1) self[field.alias] = data[field.alias];\n      });\n    } else {\n      throw new Error('invalid data');\n    }\n  }\n};\nexports.defineProperties = defineProperties;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","defineProperties","assert_1","require","internal_1","externals_1","bytes_1","self","fields","data","raw","_fields","toJSON","label","obj_1","forEach","field","concat","toString","baToJSON","serialize","rlp","encode","i","push","name","getter","setter","v","toBuffer","allowZero","Buffer","allocUnsafe","allowLess","length","unpadBuffer","default","enumerable","configurable","get","set","alias","from","stripHexPrefix","isBuffer","decode","Array","isArray","Error","d","keys_1","keys","indexOf"],"sources":["D:/Documentos/BLOCKCHAIN/Doble Grado BlockChain/Blockchain Engineering/TFG - Enginering/BLOCKTICK/blocktick_dApp/node_modules/ethereumjs-util/dist.browser/object.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defineProperties = void 0;\nvar assert_1 = __importDefault(require(\"assert\"));\nvar internal_1 = require(\"./internal\");\nvar externals_1 = require(\"./externals\");\nvar bytes_1 = require(\"./bytes\");\n/**\n * Defines properties on a `Object`. It make the assumption that underlying data is binary.\n * @param self the `Object` to define properties on\n * @param fields an array fields to define. Fields can contain:\n * * `name` - the name of the properties\n * * `length` - the number of bytes the field can have\n * * `allowLess` - if the field can be less than the length\n * * `allowEmpty`\n * @param data data to be validated against the definitions\n * @deprecated\n */\nvar defineProperties = function (self, fields, data) {\n    self.raw = [];\n    self._fields = [];\n    // attach the `toJSON`\n    self.toJSON = function (label) {\n        if (label === void 0) { label = false; }\n        if (label) {\n            var obj_1 = {};\n            self._fields.forEach(function (field) {\n                obj_1[field] = \"0x\".concat(self[field].toString('hex'));\n            });\n            return obj_1;\n        }\n        return (0, bytes_1.baToJSON)(self.raw);\n    };\n    self.serialize = function serialize() {\n        return externals_1.rlp.encode(self.raw);\n    };\n    fields.forEach(function (field, i) {\n        self._fields.push(field.name);\n        function getter() {\n            return self.raw[i];\n        }\n        function setter(v) {\n            v = (0, bytes_1.toBuffer)(v);\n            if (v.toString('hex') === '00' && !field.allowZero) {\n                v = Buffer.allocUnsafe(0);\n            }\n            if (field.allowLess && field.length) {\n                v = (0, bytes_1.unpadBuffer)(v);\n                (0, assert_1.default)(field.length >= v.length, \"The field \".concat(field.name, \" must not have more \").concat(field.length, \" bytes\"));\n            }\n            else if (!(field.allowZero && v.length === 0) && field.length) {\n                (0, assert_1.default)(field.length === v.length, \"The field \".concat(field.name, \" must have byte length of \").concat(field.length));\n            }\n            self.raw[i] = v;\n        }\n        Object.defineProperty(self, field.name, {\n            enumerable: true,\n            configurable: true,\n            get: getter,\n            set: setter,\n        });\n        if (field.default) {\n            self[field.name] = field.default;\n        }\n        // attach alias\n        if (field.alias) {\n            Object.defineProperty(self, field.alias, {\n                enumerable: false,\n                configurable: true,\n                set: setter,\n                get: getter,\n            });\n        }\n    });\n    // if the constuctor is passed data\n    if (data) {\n        if (typeof data === 'string') {\n            data = Buffer.from((0, internal_1.stripHexPrefix)(data), 'hex');\n        }\n        if (Buffer.isBuffer(data)) {\n            data = externals_1.rlp.decode(data);\n        }\n        if (Array.isArray(data)) {\n            if (data.length > self._fields.length) {\n                throw new Error('wrong number of fields in data');\n            }\n            // make sure all the items are buffers\n            data.forEach(function (d, i) {\n                self[self._fields[i]] = (0, bytes_1.toBuffer)(d);\n            });\n        }\n        else if (typeof data === 'object') {\n            var keys_1 = Object.keys(data);\n            fields.forEach(function (field) {\n                if (keys_1.indexOf(field.name) !== -1)\n                    self[field.name] = data[field.name];\n                if (keys_1.indexOf(field.alias) !== -1)\n                    self[field.alias] = data[field.alias];\n            });\n        }\n        else {\n            throw new Error('invalid data');\n        }\n    }\n};\nexports.defineProperties = defineProperties;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}