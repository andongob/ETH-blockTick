{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ripemd160_1 = require(\"../ripemd160\");\nvar sha256_1 = require(\"../sha256\");\nexports.createHmac = require(\"create-hmac\");\nexports.randomBytes = require(\"randombytes\");\nvar Hash = /** @class */function () {\n  function Hash(hashFunction) {\n    this.hashFunction = hashFunction;\n    this.buffers = [];\n  }\n  Hash.prototype.update = function (buffer) {\n    if (!Buffer.isBuffer(buffer)) {\n      throw new Error(\"hdkey-crypto shim is outdated\");\n    }\n    this.buffers.push(buffer);\n    return this;\n  };\n  Hash.prototype.digest = function (param) {\n    if (param) {\n      throw new Error(\"hdkey-crypto shim is outdated\");\n    }\n    return this.hashFunction(Buffer.concat(this.buffers));\n  };\n  return Hash;\n}();\n// We don't use create-hash here, as it doesn't work well with Rollup\nexports.createHash = function (name) {\n  if (name === \"ripemd160\") {\n    return new Hash(ripemd160_1.ripemd160);\n  }\n  if (name === \"sha256\") {\n    return new Hash(sha256_1.sha256);\n  }\n  throw new Error(\"hdkey-crypto shim is outdated\");\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","ripemd160_1","require","sha256_1","createHmac","randomBytes","Hash","hashFunction","buffers","prototype","update","buffer","Buffer","isBuffer","Error","push","digest","param","concat","createHash","name","ripemd160","sha256"],"sources":["D:/Documentos/BLOCKCHAIN/Doble Grado BlockChain/Blockchain Engineering/TFG - Enginering/BLOCKTICK/blocktick_dApp/node_modules/ethereum-cryptography/pure/shims/hdkey-crypto.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ripemd160_1 = require(\"../ripemd160\");\nvar sha256_1 = require(\"../sha256\");\nexports.createHmac = require(\"create-hmac\");\nexports.randomBytes = require(\"randombytes\");\nvar Hash = /** @class */ (function () {\n    function Hash(hashFunction) {\n        this.hashFunction = hashFunction;\n        this.buffers = [];\n    }\n    Hash.prototype.update = function (buffer) {\n        if (!Buffer.isBuffer(buffer)) {\n            throw new Error(\"hdkey-crypto shim is outdated\");\n        }\n        this.buffers.push(buffer);\n        return this;\n    };\n    Hash.prototype.digest = function (param) {\n        if (param) {\n            throw new Error(\"hdkey-crypto shim is outdated\");\n        }\n        return this.hashFunction(Buffer.concat(this.buffers));\n    };\n    return Hash;\n}());\n// We don't use create-hash here, as it doesn't work well with Rollup\nexports.createHash = function (name) {\n    if (name === \"ripemd160\") {\n        return new Hash(ripemd160_1.ripemd160);\n    }\n    if (name === \"sha256\") {\n        return new Hash(sha256_1.sha256);\n    }\n    throw new Error(\"hdkey-crypto shim is outdated\");\n};\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,IAAIC,WAAW,GAAGC,OAAO,CAAC,cAAc,CAAC;AACzC,IAAIC,QAAQ,GAAGD,OAAO,CAAC,WAAW,CAAC;AACnCH,OAAO,CAACK,UAAU,GAAGF,OAAO,CAAC,aAAa,CAAC;AAC3CH,OAAO,CAACM,WAAW,GAAGH,OAAO,CAAC,aAAa,CAAC;AAC5C,IAAII,IAAI,GAAG,aAAe,YAAY;EAClC,SAASA,IAAI,CAACC,YAAY,EAAE;IACxB,IAAI,CAACA,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACC,OAAO,GAAG,EAAE;EACrB;EACAF,IAAI,CAACG,SAAS,CAACC,MAAM,GAAG,UAAUC,MAAM,EAAE;IACtC,IAAI,CAACC,MAAM,CAACC,QAAQ,CAACF,MAAM,CAAC,EAAE;MAC1B,MAAM,IAAIG,KAAK,CAAC,+BAA+B,CAAC;IACpD;IACA,IAAI,CAACN,OAAO,CAACO,IAAI,CAACJ,MAAM,CAAC;IACzB,OAAO,IAAI;EACf,CAAC;EACDL,IAAI,CAACG,SAAS,CAACO,MAAM,GAAG,UAAUC,KAAK,EAAE;IACrC,IAAIA,KAAK,EAAE;MACP,MAAM,IAAIH,KAAK,CAAC,+BAA+B,CAAC;IACpD;IACA,OAAO,IAAI,CAACP,YAAY,CAACK,MAAM,CAACM,MAAM,CAAC,IAAI,CAACV,OAAO,CAAC,CAAC;EACzD,CAAC;EACD,OAAOF,IAAI;AACf,CAAC,EAAG;AACJ;AACAP,OAAO,CAACoB,UAAU,GAAG,UAAUC,IAAI,EAAE;EACjC,IAAIA,IAAI,KAAK,WAAW,EAAE;IACtB,OAAO,IAAId,IAAI,CAACL,WAAW,CAACoB,SAAS,CAAC;EAC1C;EACA,IAAID,IAAI,KAAK,QAAQ,EAAE;IACnB,OAAO,IAAId,IAAI,CAACH,QAAQ,CAACmB,MAAM,CAAC;EACpC;EACA,MAAM,IAAIR,KAAK,CAAC,+BAA+B,CAAC;AACpD,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}