{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar buffer_1 = require(\"buffer\");\nvar transaction_1 = require(\"./transaction\");\n/**\r\n * Creates a new transaction object that doesn't need to be signed.\r\n *\r\n * @param data - A transaction can be initialized with its rlp representation, an array containing\r\n * the value of its fields in order, or an object containing them by name.\r\n *\r\n * @param opts - The transaction's options, used to indicate the chain and hardfork the\r\n * transactions belongs to.\r\n *\r\n * @see Transaction\r\n */\nvar FakeTransaction = /** @class */function (_super) {\n  __extends(FakeTransaction, _super);\n  function FakeTransaction(data, opts) {\n    if (data === void 0) {\n      data = {};\n    }\n    if (opts === void 0) {\n      opts = {};\n    }\n    var _this = _super.call(this, data, opts) || this;\n    Object.defineProperty(_this, 'from', {\n      enumerable: true,\n      configurable: true,\n      get: function () {\n        return _this.getSenderAddress();\n      },\n      set: function (val) {\n        if (val) {\n          _this._from = ethereumjs_util_1.toBuffer(val);\n        }\n      }\n    });\n    var txData = data;\n    if (txData.from) {\n      _this.from = ethereumjs_util_1.toBuffer(txData.from);\n    }\n    return _this;\n  }\n  /**\r\n   * Computes a sha3-256 hash of the serialized tx, using the sender address to generate a fake\r\n   * signature.\r\n   *\r\n   * @param includeSignature - Whether or not to include the signature\r\n   */\n  FakeTransaction.prototype.hash = function (includeSignature) {\n    if (includeSignature === void 0) {\n      includeSignature = true;\n    }\n    if (includeSignature && this._from && this._from.toString('hex') !== '') {\n      // include a fake signature using the from address as a private key\n      var fakeKey = buffer_1.Buffer.concat([this._from, this._from.slice(0, 12)]);\n      this.sign(fakeKey);\n    }\n    return _super.prototype.hash.call(this, includeSignature);\n  };\n  return FakeTransaction;\n}(transaction_1.default);\nexports.default = FakeTransaction;","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","exports","value","ethereumjs_util_1","require","buffer_1","transaction_1","FakeTransaction","_super","data","opts","_this","call","enumerable","configurable","get","getSenderAddress","set","val","_from","toBuffer","txData","from","hash","includeSignature","toString","fakeKey","Buffer","concat","slice","sign","default"],"sources":["D:/Documentos/BLOCKCHAIN/Doble Grado BlockChain/Blockchain Engineering/TFM - Enginering - SEP 2023/BLOCKTICK ETHEREUM/BLOCKTICK/Ethereum-Blocktick/node_modules/ethereumjs-tx/dist/fake.js"],"sourcesContent":["\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\r\nvar buffer_1 = require(\"buffer\");\r\nvar transaction_1 = require(\"./transaction\");\r\n/**\r\n * Creates a new transaction object that doesn't need to be signed.\r\n *\r\n * @param data - A transaction can be initialized with its rlp representation, an array containing\r\n * the value of its fields in order, or an object containing them by name.\r\n *\r\n * @param opts - The transaction's options, used to indicate the chain and hardfork the\r\n * transactions belongs to.\r\n *\r\n * @see Transaction\r\n */\r\nvar FakeTransaction = /** @class */ (function (_super) {\r\n    __extends(FakeTransaction, _super);\r\n    function FakeTransaction(data, opts) {\r\n        if (data === void 0) { data = {}; }\r\n        if (opts === void 0) { opts = {}; }\r\n        var _this = _super.call(this, data, opts) || this;\r\n        Object.defineProperty(_this, 'from', {\r\n            enumerable: true,\r\n            configurable: true,\r\n            get: function () { return _this.getSenderAddress(); },\r\n            set: function (val) {\r\n                if (val) {\r\n                    _this._from = ethereumjs_util_1.toBuffer(val);\r\n                }\r\n            },\r\n        });\r\n        var txData = data;\r\n        if (txData.from) {\r\n            _this.from = ethereumjs_util_1.toBuffer(txData.from);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Computes a sha3-256 hash of the serialized tx, using the sender address to generate a fake\r\n     * signature.\r\n     *\r\n     * @param includeSignature - Whether or not to include the signature\r\n     */\r\n    FakeTransaction.prototype.hash = function (includeSignature) {\r\n        if (includeSignature === void 0) { includeSignature = true; }\r\n        if (includeSignature && this._from && this._from.toString('hex') !== '') {\r\n            // include a fake signature using the from address as a private key\r\n            var fakeKey = buffer_1.Buffer.concat([this._from, this._from.slice(0, 12)]);\r\n            this.sign(fakeKey);\r\n        }\r\n        return _super.prototype.hash.call(this, includeSignature);\r\n    };\r\n    return FakeTransaction;\r\n}(transaction_1.default));\r\nexports.default = FakeTransaction;\r\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,SAAS,GAAI,IAAI,IAAI,IAAI,CAACA,SAAS,IAAM,YAAY;EACrD,IAAIC,aAAa,GAAG,UAAUC,CAAC,EAAEC,CAAC,EAAE;IAChCF,aAAa,GAAGG,MAAM,CAACC,cAAc,IAChC;MAAEC,SAAS,EAAE;IAAG,CAAC,YAAYC,KAAK,IAAI,UAAUL,CAAC,EAAEC,CAAC,EAAE;MAAED,CAAC,CAACI,SAAS,GAAGH,CAAC;IAAE,CAAE,IAC5E,UAAUD,CAAC,EAAEC,CAAC,EAAE;MAAE,KAAK,IAAIK,CAAC,IAAIL,CAAC,EAAE,IAAIA,CAAC,CAACM,cAAc,CAACD,CAAC,CAAC,EAAEN,CAAC,CAACM,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,CAAC;IAAE,CAAC;IAC9E,OAAOP,aAAa,CAACC,CAAC,EAAEC,CAAC,CAAC;EAC9B,CAAC;EACD,OAAO,UAAUD,CAAC,EAAEC,CAAC,EAAE;IACnBF,aAAa,CAACC,CAAC,EAAEC,CAAC,CAAC;IACnB,SAASO,EAAE,GAAG;MAAE,IAAI,CAACC,WAAW,GAAGT,CAAC;IAAE;IACtCA,CAAC,CAACU,SAAS,GAAGT,CAAC,KAAK,IAAI,GAAGC,MAAM,CAACS,MAAM,CAACV,CAAC,CAAC,IAAIO,EAAE,CAACE,SAAS,GAAGT,CAAC,CAACS,SAAS,EAAE,IAAIF,EAAE,EAAE,CAAC;EACxF,CAAC;AACL,CAAC,EAAG;AACJN,MAAM,CAACU,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,IAAIC,iBAAiB,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAClD,IAAIC,QAAQ,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAChC,IAAIE,aAAa,GAAGF,OAAO,CAAC,eAAe,CAAC;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIG,eAAe,GAAG,aAAe,UAAUC,MAAM,EAAE;EACnDtB,SAAS,CAACqB,eAAe,EAAEC,MAAM,CAAC;EAClC,SAASD,eAAe,CAACE,IAAI,EAAEC,IAAI,EAAE;IACjC,IAAID,IAAI,KAAK,KAAK,CAAC,EAAE;MAAEA,IAAI,GAAG,CAAC,CAAC;IAAE;IAClC,IAAIC,IAAI,KAAK,KAAK,CAAC,EAAE;MAAEA,IAAI,GAAG,CAAC,CAAC;IAAE;IAClC,IAAIC,KAAK,GAAGH,MAAM,CAACI,IAAI,CAAC,IAAI,EAAEH,IAAI,EAAEC,IAAI,CAAC,IAAI,IAAI;IACjDpB,MAAM,CAACU,cAAc,CAACW,KAAK,EAAE,MAAM,EAAE;MACjCE,UAAU,EAAE,IAAI;MAChBC,YAAY,EAAE,IAAI;MAClBC,GAAG,EAAE,YAAY;QAAE,OAAOJ,KAAK,CAACK,gBAAgB,EAAE;MAAE,CAAC;MACrDC,GAAG,EAAE,UAAUC,GAAG,EAAE;QAChB,IAAIA,GAAG,EAAE;UACLP,KAAK,CAACQ,KAAK,GAAGhB,iBAAiB,CAACiB,QAAQ,CAACF,GAAG,CAAC;QACjD;MACJ;IACJ,CAAC,CAAC;IACF,IAAIG,MAAM,GAAGZ,IAAI;IACjB,IAAIY,MAAM,CAACC,IAAI,EAAE;MACbX,KAAK,CAACW,IAAI,GAAGnB,iBAAiB,CAACiB,QAAQ,CAACC,MAAM,CAACC,IAAI,CAAC;IACxD;IACA,OAAOX,KAAK;EAChB;EACA;AACJ;AACA;AACA;AACA;AACA;EACIJ,eAAe,CAACT,SAAS,CAACyB,IAAI,GAAG,UAAUC,gBAAgB,EAAE;IACzD,IAAIA,gBAAgB,KAAK,KAAK,CAAC,EAAE;MAAEA,gBAAgB,GAAG,IAAI;IAAE;IAC5D,IAAIA,gBAAgB,IAAI,IAAI,CAACL,KAAK,IAAI,IAAI,CAACA,KAAK,CAACM,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE;MACrE;MACA,IAAIC,OAAO,GAAGrB,QAAQ,CAACsB,MAAM,CAACC,MAAM,CAAC,CAAC,IAAI,CAACT,KAAK,EAAE,IAAI,CAACA,KAAK,CAACU,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;MAC3E,IAAI,CAACC,IAAI,CAACJ,OAAO,CAAC;IACtB;IACA,OAAOlB,MAAM,CAACV,SAAS,CAACyB,IAAI,CAACX,IAAI,CAAC,IAAI,EAAEY,gBAAgB,CAAC;EAC7D,CAAC;EACD,OAAOjB,eAAe;AAC1B,CAAC,CAACD,aAAa,CAACyB,OAAO,CAAE;AACzB9B,OAAO,CAAC8B,OAAO,GAAGxB,eAAe"},"metadata":{},"sourceType":"script","externalDependencies":[]}