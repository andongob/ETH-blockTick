{"ast":null,"code":"const BigInteger = require('bigi');\nconst Buffer = require('safe-buffer').Buffer;\nconst ecurve = require('ecurve');\nconst randomBytes = require('randombytes');\nconst curve = ecurve.getCurveByName('secp256k1');\nconst check = require('./check');\nconst convert = require('./convert');\nconst concat = Buffer.concat;\nconst G = curve.G;\nconst p = curve.p;\nconst n = curve.n;\nconst zero = BigInteger.ZERO;\nconst one = BigInteger.ONE;\nconst two = BigInteger.valueOf(2);\nconst three = BigInteger.valueOf(3);\nconst four = BigInteger.valueOf(4);\nconst seven = BigInteger.valueOf(7);\nfunction deterministicGetK0(privateKey, publicKey, message) {\n  check.checkSignParams(privateKey, message);\n  const h = taggedHash('BIP0340/nonce', concat([convert.intToBuffer(privateKey), publicKey, message]));\n  const i = convert.bufferToInt(h);\n  return i.mod(n);\n}\nfunction isEven(pubKey) {\n  return pubKey.affineY.mod(two).equals(zero);\n}\nfunction getEvenKey(pubKey, privateKey) {\n  if (isEven(pubKey)) {\n    return privateKey.clone();\n  }\n  return n.subtract(privateKey);\n}\nfunction getE(Rx, Px, m) {\n  const hash = taggedHash('BIP0340/challenge', concat([Rx, Px, m]));\n  return convert.bufferToInt(hash).mod(n);\n}\nfunction getR(s, e, P) {\n  const sG = G.multiply(s);\n  const eP = P.multiply(e);\n  return sG.add(eP.negate());\n}\nfunction taggedHash(tag, msg) {\n  const tagHash = convert.hash(tag);\n  return convert.hash(concat([tagHash, tagHash, Buffer.from(msg)]));\n}\nfunction liftX(Px) {\n  const x = convert.bufferToInt(Px);\n  const c = x.pow(three).add(seven).mod(p);\n  const y = c.modPow(p.add(one).divide(four), p);\n  if (c.compareTo(y.modPow(two, p)) !== 0) {\n    throw new Error('c is not equal to y^2');\n  }\n  let P = ecurve.Point.fromAffine(curve, x, y);\n  if (!isEven(P)) {\n    P = ecurve.Point.fromAffine(curve, x, p.subtract(y));\n  }\n  check.checkPointExists(true, P);\n  return P;\n}\nfunction randomA() {\n  let a = null;\n  for (;;) {\n    a = convert.bufferToInt(Buffer.from(randomBytes(32)));\n    try {\n      check.checkRange('a', a);\n      return a;\n    } catch (e) {\n      // out of range, generate another one\n    }\n  }\n}\nmodule.exports = {\n  deterministicGetK0,\n  isEven,\n  getEvenKey,\n  getE,\n  getR,\n  taggedHash,\n  liftX,\n  randomA\n};","map":{"version":3,"names":["BigInteger","require","Buffer","ecurve","randomBytes","curve","getCurveByName","check","convert","concat","G","p","n","zero","ZERO","one","ONE","two","valueOf","three","four","seven","deterministicGetK0","privateKey","publicKey","message","checkSignParams","h","taggedHash","intToBuffer","i","bufferToInt","mod","isEven","pubKey","affineY","equals","getEvenKey","clone","subtract","getE","Rx","Px","m","hash","getR","s","e","P","sG","multiply","eP","add","negate","tag","msg","tagHash","from","liftX","x","c","pow","y","modPow","divide","compareTo","Error","Point","fromAffine","checkPointExists","randomA","a","checkRange","module","exports"],"sources":["D:/Documentos/BLOCKCHAIN/Doble Grado BlockChain/Blockchain Engineering/TFM - Enginering - SEP 2023/BLOCKTICK ETHEREUM/BLOCKTICK/Ethereum-Blocktick/node_modules/bip-schnorr/src/math.js"],"sourcesContent":["const BigInteger = require('bigi');\r\nconst Buffer = require('safe-buffer').Buffer;\r\nconst ecurve = require('ecurve');\r\nconst randomBytes = require('randombytes');\r\nconst curve = ecurve.getCurveByName('secp256k1');\r\nconst check = require('./check');\r\nconst convert = require('./convert');\r\n\r\nconst concat = Buffer.concat;\r\nconst G = curve.G;\r\nconst p = curve.p;\r\nconst n = curve.n;\r\nconst zero = BigInteger.ZERO;\r\nconst one = BigInteger.ONE;\r\nconst two = BigInteger.valueOf(2);\r\nconst three = BigInteger.valueOf(3);\r\nconst four = BigInteger.valueOf(4);\r\nconst seven = BigInteger.valueOf(7);\r\n\r\nfunction deterministicGetK0(privateKey, publicKey, message) {\r\n  check.checkSignParams(privateKey, message);\r\n\r\n  const h = taggedHash('BIP0340/nonce', concat([convert.intToBuffer(privateKey), publicKey, message]));\r\n  const i = convert.bufferToInt(h);\r\n  return i.mod(n);\r\n}\r\n\r\nfunction isEven(pubKey) {\r\n  return pubKey.affineY.mod(two).equals(zero);\r\n}\r\n\r\nfunction getEvenKey(pubKey, privateKey) {\r\n  if (isEven(pubKey)) {\r\n    return privateKey.clone();\r\n  }\r\n\r\n  return n.subtract(privateKey);\r\n}\r\n\r\nfunction getE(Rx, Px, m) {\r\n  const hash = taggedHash('BIP0340/challenge', concat([Rx, Px, m]));\r\n  return convert.bufferToInt(hash).mod(n);\r\n}\r\n\r\nfunction getR(s, e, P) {\r\n  const sG = G.multiply(s);\r\n  const eP = P.multiply(e);\r\n  return sG.add(eP.negate());\r\n}\r\n\r\nfunction taggedHash(tag, msg) {\r\n  const tagHash = convert.hash(tag);\r\n  return convert.hash(concat([tagHash, tagHash, Buffer.from(msg)]));\r\n}\r\n\r\nfunction liftX(Px) {\r\n  const x = convert.bufferToInt(Px);\r\n\r\n  const c = x.pow(three).add(seven).mod(p);\r\n  const y = c.modPow(p.add(one).divide(four), p);\r\n  if (c.compareTo(y.modPow(two, p)) !== 0) {\r\n    throw new Error('c is not equal to y^2');\r\n  }\r\n  let P = ecurve.Point.fromAffine(curve, x, y);\r\n  if (!isEven(P)) {\r\n    P = ecurve.Point.fromAffine(curve, x, p.subtract(y));\r\n  }\r\n\r\n  check.checkPointExists(true, P);\r\n  return P;\r\n}\r\n\r\nfunction randomA() {\r\n  let a = null;\r\n  for (; ;) {\r\n    a = convert.bufferToInt(Buffer.from(randomBytes(32)));\r\n    try {\r\n      check.checkRange('a', a);\r\n      return a;\r\n    } catch (e) {\r\n      // out of range, generate another one\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  deterministicGetK0,\r\n  isEven,\r\n  getEvenKey,\r\n  getE,\r\n  getR,\r\n  taggedHash,\r\n  liftX,\r\n  randomA,\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}